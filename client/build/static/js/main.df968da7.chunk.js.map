{"version":3,"sources":["components/Wrapper/index.js","components/Header/index.js","components/List/index.js","components/LetterForm/index.js","utils/API.js","components/NumberForm/index.js","components/Modal/index.js","pages/Main.js","pages/About.js","pages/Example.js","pages/ErrorPage.js","App.js","registerServiceWorker.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Header","BurgerMenu","noOverlay","href","Component","List","_this","this","newArray","results","slice","count","map","result","key","id","onClick","e","nameClicked","Name","Gender","updateLoad","_this2","renderList","loading","InfiniteLoader_default","rowCount","total","onVisited","length","increaseCount","increaseResults","LetterForm","state","letterOptions","dropdown","input","output","updateLetterOptions","letterInput","evt","preventDefault","$like","setState","appendOutput","updateOutput","target","value","hideForm","removeLetterRow","componentWillMount","inputs","includes","replace","dropdowns","charAt","concat","dropdownClass","type","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","inputClass","onChange","placeholder","updateModal","errorMessage","API","getCount","col","axios","get","getCountMF","gender","findNames","query","console","log","post","findName","NumberForm","numericalOptions","years","yearCol","min","max","minValue","maxValue","slider","updateNumericalOptions","input2","updateNumbers","male","female","checkSliderMinMax","startMin","startMax","outputVal","prevMax","minPercentage","maxPercentage","Math","round","Object","defineProperty","$between","then","res","data","catch","err","updateYearOptions","input1","removeNumberRow","nextProps","options","year","keys","hasOwnProperty","substr","indexOf","_this3","dropdownClassA","dropdownClassB","js_default","Modal","status","disclaimer","showHideStyle","show","heading","title","name","prettyMessage","messages","message","cat","role","style","display","handleClose","data-dismiss","aria-label","aria-hidden","react_chartkick_esm","colors","1880s","dataArr1","1890s","1900s","1910s","1920s","1930s","1940s","1950s","1960s","1970s","1980s","1990s","2000s","2010s","rank","dataArr2","App","showModal","minLength","maxLength","isLoading","letterrows","numberrows","letterRowLength","numberRowLength","letterInputs","letterInputClasses","letterDropdownClasses","numberInputs","numberDropdownClassesA","numberDropdownClassesB","showResults","moreResults","totalCount","sort","letterErrorMessage","numberErrorMessage","modalTitle","modalMessages","handleClickLetter","rows","index","push","grabLetterInput","realIndex","i","handleClickNumber","grabNumberInput","checkErroroneousInputs","submit","errorArray","letterInputClass","letterDropdowns","letterError","dropdownA","dropdownB","numberError","j","getOwnPropertyNames","k","newResults","l","handleSubmit","sortQuery","queryGender","lettersArr","letters","numbers","limit","queryLetter","queryLink","JSON","stringify","encodeURI","history","newCount","load","splice","newRows","updateDropdownOptions","Count_AllTime","Rank_AllTime","Count_188x","Count_189x","Count_190x","Count_191x","Count_192x","Count_193x","Count_194x","Count_195x","Count_196x","Count_197x","Count_198x","Count_199x","Count_200x","Count_201x","Rank_188x","Rank_189x","Rank_190x","Rank_191x","Rank_192x","Rank_193x","Rank_194x","Rank_195x","Rank_196x","Rank_197x","Rank_198x","Rank_199x","Rank_200x","Rank_201x","genderArr","letterDropdownClass","letterRow","savedQuery","match","params","savedQueryEncode","savedQueryDecode","decodeURI","fields","split","parse","numberRow","numDD","numErr","parseInt","components_Wrapper","checked","r","components_LetterForm","components_NumberForm","components_List","components_Modal","About","Example","src","alt","NoMatch","components_Header","BrowserRouter","Switch","Route","exact","path","component","Main","ErrorPage","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.df968da7.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Wrapper(props) {\n  return <div className=\"mx-auto\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\n\nimport \"./styles.css\";\n\nclass Header extends Component {\n  \n  render() {\n    return (\n      <div>\n        <Menu noOverlay>\n          <a className=\"menu-item\" href=\"/\">\n            Search\n          </a>\n\n          <a className=\"menu-item\" href=\"/about\">\n            About\n          </a>\n\n          <a className=\"menu-item\" href=\"/example\">\n            Example\n          </a>\n\n        </Menu>\n        <header className=\"navbar text-center col-12 justify-content-center pb-0\">\n          <a href=\"/\" className=\"no-underline\">\n            <h1>\n              <i className=\"fas fa-baby-carriage\" />\n              <span className=\"text1\"> Unpopular Baby Names </span>\n              <i className=\"fas fa-baby\" />\n            </h1>\n          </a>\n          <h4 className=\"subhead text-center col-12\">\n            A tool to find names based on popularity\n          </h4>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport InfiniteLoader from 'react-infinite-loader'\nimport \"./styles.css\";\n\nclass List extends Component {\n    renderList() {\n        let newArray = this.props.results.slice(0, this.props.count);\n        return (\n            <div className=\"col-12\">\n                <ol>\n                    {newArray.map(result => (\n                        <li key={result.id}>\n                            <h4 onClick={e => this.props.nameClicked(result.Name, result.Gender, e)} className=\"text-center\">{result.Name} {(result.Gender === \"M\") ? \"- male\" : \"- female\"}</h4>\n                        </li>\n                    ))}\n                </ol>\n            </div>\n        )\n    }\n\n    componentWillUnmount() {\n        this.props.updateLoad();\n    }\n\n    render() {\n\n        return (\n            <div>\n                {this.renderList()}\n                {(this.props.loading) &&\n                    <InfiniteLoader rowCount={this.props.total} onVisited={() => {\n                        if ((this.props.results.length > 0) && (this.props.results.length > this.props.count)) {\n                            this.props.increaseCount();\n                            this.renderList();\n                        }\n                        else if ((this.props.results.length > 0) && (this.props.results.length === this.props.count)) {\n                            this.props.increaseResults();\n                            this.renderList();\n                        }\n                        else {\n                            this.props.updateLoad();\n                        }\n                    }} />}\n            </div>\n        );\n    }\n}\n\nexport default List;","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport \"react-input-range/lib/css/index.css\";\n\nclass LetterForm extends Component {\n  state = {\n    letterOptions: \"Letter Options\",\n    dropdown: \"Letter Options\",\n    input: \"Letter(s)\",\n    output: \"\"\n  };\n\n  updateLetterOptions = (letterInput, evt) => {\n    evt.preventDefault();\n    let output = \"\";\n    if (letterInput === \"Contains\") {\n      output = { $like: \"%\" + this.state.input + \"%\" };\n    } else if (letterInput === \"Starts With\") {\n      output = { $like: this.state.input + \"%\" };\n    } else if (letterInput === \"Ends With\") {\n      output = { $like: \"%\" + this.state.input };\n    }\n    this.setState({\n      letterOptions: letterInput,\n      dropdown: letterInput,\n      output: output\n    });\n    this.props.appendOutput(this.props.className, output);\n  };\n\n  updateOutput = evt => {\n    let input = evt.target.value;\n    let output = \"string\";\n    if (this.state.dropdown === \"Contains\") {\n      output = { $like: \"%\" + input + \"%\" };\n    } else if (this.state.dropdown === \"Starts With\") {\n      output = { $like: input + \"%\" };\n    } else if (this.state.dropdown === \"Ends With\") {\n      output = { $like: \"%\" + input };\n    }\n    this.setState({ input: input, output: output });\n    this.props.appendOutput(this.props.className, output);\n  };\n\n  hideForm = () => {\n    this.props.removeLetterRow(this.props.className);\n  };\n\n  componentWillMount = () => {\n    if (\n      this.props.inputs &&\n      !this.props.inputs.includes(\"Letter(s)\") &&\n      this.props.inputs !== \"string\"\n    ) {\n      let inputs = this.props.inputs.replace(/%/g, \"\");\n      let dropdowns = \"Letter Options\";\n      if (\n        this.props.inputs.charAt(0) === \"%\" &&\n        this.props.inputs.charAt(this.props.inputs.length - 1) === \"%\"\n      ) {\n        dropdowns = \"Contains\";\n      } else if (this.props.inputs.charAt(0) === \"%\") {\n        dropdowns = \"Ends With\";\n      } else if (\n        this.props.inputs.charAt(this.props.inputs.length - 1) === \"%\"\n      ) {\n        dropdowns = \"Starts With\";\n      }\n      this.setState({ input: inputs, dropdown: dropdowns });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"max-width\">\n        <div className=\"row justify-content-center mx-auto\">\n          <form className=\"form-inline letters mb-0\">\n            <div className=\"dropdown ml-1\">\n              <button\n                className={`btn btn-secondary dropdown-toggle ml-0 px-1 ${\n                  this.props.dropdownClass\n                }`}\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                {this.state.dropdown}\n              </button>\n              <div\n                className=\"dropdown-menu\"\n                aria-labelledby=\"dropdownMenuButton\"\n              >\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateLetterOptions(\"Contains\", e)}\n                >\n                  Contains\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateLetterOptions(\"Starts With\", e)}\n                >\n                  Starts With\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateLetterOptions(\"Ends With\", e)}\n                >\n                  Ends With\n                </button>\n              </div>\n            </div>\n\n            <label className=\"ml-1\">\n              <input\n                type=\"text\"\n                className={`form-control letter-input letter-input-${\n                  this.props.className\n                } ${this.props.inputClass}`}\n                onChange={e => this.updateOutput(e)}\n                placeholder={this.state.input}\n              />\n            </label>\n            <button\n              type=\"button\"\n              className=\"close text-white ml-1 small\"\n              onClick={this.hideForm}\n            >\n              {\" \"}\n              &times;\n            </button>\n          </form>\n          <sup className=\"mx-0\">\n            <button type=\"button\" className=\"info text-white mx-0\">\n              <i\n                className=\"fas fa-info-circle\"\n                onClick={() => this.props.updateModal(\"letter\")}\n              />\n            </button>\n          </sup>\n        </div>\n        <div className=\"red-text\">{this.props.errorMessage}</div>\n      </div>\n    );\n  }\n}\n\nexport default LetterForm;\n","import axios from \"axios\";\n\nexport default {\n  getCount: function(col) {\n    return axios.get(\"/count/\" + col);\n  },\n  getCountMF: function(col, gender) {\n    return axios.get(\"/count/\" + col + \"/\" + gender);\n  },\n  findNames: function(query) {\n    console.log(query);\n    return axios.post(\"/names\", query);\n  },\n  findName: function(query) {\n    console.log(query);\n    return axios.post(\"/name\", query);\n  }\n};\n","import React, { Component } from \"react\";\nimport InputRange from \"react-input-range\";\nimport API from \"../../utils/API\";\nimport \"./styles.css\";\nimport \"react-input-range/lib/css/index.css\";\n\nclass NumberForm extends Component {\n  state = {\n    numericalOptions: \"Count\",\n    years: \"All Time\",\n    yearCol: \"Year(s)\",\n    value: { min: 1, max: 5150472 },\n    minValue: 1,\n    maxValue: 5150472,\n    slider: \"\",\n    output: {}\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.male !== nextProps.male ||\n      this.props.female !== nextProps.female\n    ) {\n      if (this.state.numericalOptions !== \"Numerical Options\") {\n        this.updateNumbers(\n          this.state.numericalOptions,\n          this.state.yearCol,\n          nextProps.male,\n          nextProps.female\n        );\n      }\n    }\n  }\n\n  componentWillMount() {\n    let startMin = 20;\n    let startMax = 80;\n    let options = \"Numerical Options\";\n    let yearCol = \"Year(s)\";\n    let year = \"Year(s)\";\n    let max = 100;\n    let outputVal = this.state.output;\n    if (this.props.inputs) {\n      console.log(this.props.inputs);\n      outputVal = this.props.inputs;\n      let key = Object.keys(this.props.inputs)[0];\n      if (!key.includes(\"Year(s)\")) {\n        if (this.props.inputs.hasOwnProperty(key)) {\n          console.log(key);\n          options = key.substr(0, key.indexOf(\"_\"));\n          year = key.substr(key.indexOf(\"_\") + 1);\n          yearCol = year;\n          if (year.includes(\"x\")) {\n            year = year.replace(/x/, \"0s\");\n          } else {\n            year = \"All Time\";\n          }\n          startMin = this.props.inputs[key].$between[0];\n          startMax = this.props.inputs[key].$between[1];\n          console.log(\"startmin \" + this.props.inputs[key].$between[0]);\n          console.log(\"startmax \" + this.props.inputs[key].$between[1]);\n          if (this.props.male && this.props.female) {\n            API.getCount(key)\n              .then(res => {\n                max = res.data;\n                console.log(\"max \" + res.data);\n                this.checkSliderMinMax(\n                  max,\n                  options,\n                  startMin,\n                  startMax,\n                  outputVal\n                );\n                this.setState({\n                  output: outputVal,\n                  numericalOptions: options,\n                  years: year,\n                  yearCol: yearCol,\n                  maxValue: max,\n                  value: { min: startMin, max: startMax }\n                });\n              })\n              .catch(err => {\n                console.log(\"count error: \");\n                console.log(err);\n              });\n          } else {\n            let gender = this.props.male ? \"M\" : \"F\";\n            API.getCountMF(key, gender)\n              .then(res => {\n                max = res.data;\n                console.log(\"max \" + res.data);\n                this.checkSliderMinMax(\n                  max,\n                  options,\n                  startMin,\n                  startMax,\n                  outputVal\n                );\n                this.setState({\n                  output: outputVal,\n                  numericalOptions: options,\n                  years: year,\n                  yearCol: yearCol,\n                  maxValue: max,\n                  value: { min: startMin, max: startMax }\n                });\n              })\n              .catch(err => {\n                console.log(\"count error: \");\n                console.log(err);\n              });\n          }\n        }\n      }\n    }\n  }\n\n  updateNumericalOptions = (input, input2, evt) => {\n    evt.preventDefault();\n    this.updateNumbers(input, input2, this.props.male, this.props.female);\n  };\n\n  checkSliderMinMax = (max, input, startMin, startMax, outputVal) => {\n    //update both\n    this.setState({\n      numericalOptions: input,\n      maxValue: max,\n      value: { min: startMin, max: startMax },\n      output: outputVal\n    });\n  };\n\n  updateNumbers = (input, input2, male, female) => {\n    let max = 100;\n    let prevMax = this.state.maxValue;\n    let minPercentage = this.state.value.min / prevMax;\n    let maxPercentage = this.state.value.max / prevMax;\n    let startMin = Math.round(minPercentage * 100);\n    let startMax = Math.round(maxPercentage * 100);\n    let query = input + \"_\" + input2;\n    let gender = \"\";\n    if (male && !female) {\n      gender = \"M\";\n    } else if (!male && female) {\n      gender = \"F\";\n    }\n    let outputVal = { [query]: { $between: [startMin, startMax] } };\n    if (input === \"Rank\" && input2 !== \"Year(s)\") {\n      //set max to the highest number in the column for that rank decade\n      if ((male && !female) || (!male && female)) {\n        API.getCountMF(query, gender)\n          .then(res => {\n            max = res.data;\n            startMin = Math.round(res.data * minPercentage);\n            startMax = Math.round(res.data * maxPercentage);\n            outputVal = { [query]: { $between: [startMin, startMax] } };\n            this.checkSliderMinMax(max, input, startMin, startMax, outputVal);\n            this.props.appendOutput(this.props.className, outputVal);\n          })\n          .catch(err => {\n            console.log(\"count error: \");\n            console.log(err);\n          });\n      } else {\n        API.getCount(query)\n          .then(res => {\n            max = res.data;\n            startMin = Math.round(res.data * minPercentage);\n            startMax = Math.round(res.data * maxPercentage);\n            outputVal = { [query]: { $between: [startMin, startMax] } };\n            this.checkSliderMinMax(max, input, startMin, startMax, outputVal);\n            this.props.appendOutput(this.props.className, outputVal);\n          })\n          .catch(err => {\n            console.log(\"count error: \");\n            console.log(err);\n          });\n      }\n    } else if (input === \"Count\" && input2 !== \"Year(s)\") {\n      //set max to the highest number in the column for that count decade\n      if ((male && !female) || (!male && female)) {\n        API.getCountMF(query, gender)\n          .then(res => {\n            max = res.data;\n            startMin = Math.round(res.data * minPercentage);\n            startMax = Math.round(res.data * maxPercentage);\n            outputVal = { [query]: { $between: [startMin, startMax] } };\n            this.checkSliderMinMax(max, input, startMin, startMax, outputVal);\n            this.props.appendOutput(this.props.className, outputVal);\n          })\n          .catch(err => {\n            console.log(\"count error: \");\n            console.log(err);\n          });\n      } else {\n        API.getCount(query)\n          .then(res => {\n            max = res.data;\n            startMin = Math.round(res.data * minPercentage);\n            startMax = Math.round(res.data * maxPercentage);\n            outputVal = { [query]: { $between: [startMin, startMax] } };\n            this.checkSliderMinMax(max, input, startMin, startMax, outputVal);\n            this.props.appendOutput(this.props.className, outputVal);\n          })\n          .catch(err => {\n            console.log(\"count error: \");\n            console.log(err);\n          });\n      }\n    } else {\n      this.setState({ numericalOptions: input, output: outputVal });\n      this.props.appendOutput(this.props.className, outputVal);\n    }\n  };\n\n  updateYearOptions = (input1, input2, evt) => {\n    evt.preventDefault();\n    let outputVal = {};\n    if (this.state.numericalOptions !== \"Numerical Options\") {\n      let query = this.state.numericalOptions + \"_\" + input2;\n      outputVal = {\n        [query]: { $between: [this.state.value.min, this.state.value.max] }\n      };\n    }\n    this.setState({ years: input1, yearCol: input2, output: outputVal });\n    this.props.appendOutput(this.props.className, outputVal);\n    if (this.state.numericalOptions !== \"Numerical Options\") {\n      this.updateNumericalOptions(this.state.numericalOptions, input2, evt);\n    }\n  };\n\n  hideForm = () => {\n    this.props.removeNumberRow(this.props.className);\n  };\n\n  render() {\n    return (\n      <div className=\"max-width\">\n        <div className=\"row justify-content-center mx-auto\">\n          <form className=\"form-inline number-form mb-0\">\n            <div className=\"dropdown ml-1\">\n              <button\n                className={`btn btn-secondary dropdown-toggle ml-0 px-1 ${\n                  this.props.dropdownClassA\n                }`}\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                {this.state.years}\n              </button>\n              <div\n                className=\"dropdown-menu\"\n                aria-labelledby=\"dropdownMenuButton\"\n              >\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1880\", \"188x\", e)}\n                >\n                  1880s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1890\", \"189x\", e)}\n                >\n                  1890s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1900\", \"190x\", e)}\n                >\n                  1900s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1910\", \"191x\", e)}\n                >\n                  1910s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1920\", \"192x\", e)}\n                >\n                  1920s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1930\", \"193x\", e)}\n                >\n                  1930s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1940\", \"194x\", e)}\n                >\n                  1940s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1950\", \"195x\", e)}\n                >\n                  1950s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1960\", \"196x\", e)}\n                >\n                  1960s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1970\", \"197x\", e)}\n                >\n                  1970s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1980\", \"198x\", e)}\n                >\n                  1980s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1990\", \"199x\", e)}\n                >\n                  1990s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"2000\", \"200x\", e)}\n                >\n                  2000s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"2010\", \"201x\", e)}\n                >\n                  2010s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e =>\n                    this.updateYearOptions(\"All Time\", \"AllTime\", e)\n                  }\n                >\n                  All Time\n                </button>\n              </div>\n            </div>\n\n            <div className=\"dropdown ml-1\">\n              <button\n                className={`btn btn-secondary dropdown-toggle ml-0 px-1 ${\n                  this.props.dropdownClassB\n                }`}\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                {this.state.numericalOptions}\n              </button>\n              <div\n                className=\"dropdown-menu\"\n                aria-labelledby=\"dropdownMenuButton\"\n              >\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e =>\n                    this.updateNumericalOptions(\"Rank\", this.state.yearCol, e)\n                  }\n                >\n                  Rank\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e =>\n                    this.updateNumericalOptions(\"Count\", this.state.yearCol, e)\n                  }\n                >\n                  Count\n                </button>\n              </div>\n            </div>\n            <InputRange\n              className=\"slider\"\n              maxValue={this.state.maxValue}\n              minValue={this.state.minValue}\n              value={this.state.value}\n              onChange={value => {\n                let outputVal = {};\n                if (this.state.numericalOptions !== \"Numerical Options\") {\n                  let query =\n                    this.state.numericalOptions + \"_\" + this.state.yearCol;\n                  outputVal = {\n                    [query]: { $between: [value.min, value.max] }\n                  };\n                }\n                this.setState({ value: value, output: outputVal });\n                this.props.appendOutput(this.props.className, outputVal);\n              }}\n            />\n            <button\n              type=\"button\"\n              className=\"close text-white ml-2\"\n              onClick={this.hideForm}\n            >\n              {\" \"}\n              &times;\n            </button>\n          </form>\n          <sup>\n            <button type=\"button\" className=\"info text-white\">\n              <i\n                className=\"fas fa-info-circle\"\n                onClick={() => this.props.updateModal(\"number\")}\n              />\n            </button>\n          </sup>\n        </div>\n        <div className=\"red-text\">{this.props.errorMessage}</div>\n      </div>\n    );\n  }\n}\n\nexport default NumberForm;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport { LineChart } from \"react-chartkick\";\nimport \"chart.js\";\n\nclass Modal extends Component {\n  state = {\n    status: \"count\",\n    disclaimer: \"*** higher count is more popular ***\"\n  };\n\n  render() {\n    const showHideStyle = this.props.show ? \"block\" : \"none\";\n    const gender = this.props.gender === \"M\" ? \" - Male\" : \" - Female\";\n    const heading = this.props.title\n      ? this.props.title\n      : `${this.props.name}${gender}`;\n\n    const prettyMessage = this.props.messages.map((message, key) => (\n      <p key={message.cat}>\n        <span className=\"font-weight-bold\">{message.cat}</span>{\" \"}\n        {message.message}\n      </p>\n    ));\n    return (\n      <div className=\"modal\" role=\"dialog\" style={{ display: showHideStyle }}>\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title mx-auto\">{heading}</h3>\n            <button\n              type=\"button\"\n              className=\"close white p-0 m-0\"\n              onClick={this.props.handleClose}\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          {this.props.title ? (\n            <div className=\"modal-body\">\n              <div>{prettyMessage}</div>\n              <small className=\"font-weight-bold mx-auto\">\n                *** A submission will satisfy all search terms. ***\n              </small>\n              {}\n            </div>\n          ) : this.state.status === \"count\" ? (\n            <div className=\"modal-body\">\n              <p> All Time Count = {this.props.count}</p>\n              <LineChart\n                colors={[\"#547980\", \"#547980\"]}\n                data={{\n                  \"1880s\": this.props.dataArr1[0],\n                  \"1890s\": this.props.dataArr1[1],\n                  \"1900s\": this.props.dataArr1[2],\n                  \"1910s\": this.props.dataArr1[3],\n                  \"1920s\": this.props.dataArr1[4],\n                  \"1930s\": this.props.dataArr1[5],\n                  \"1940s\": this.props.dataArr1[6],\n                  \"1950s\": this.props.dataArr1[7],\n                  \"1960s\": this.props.dataArr1[8],\n                  \"1970s\": this.props.dataArr1[9],\n                  \"1980s\": this.props.dataArr1[10],\n                  \"1990s\": this.props.dataArr1[11],\n                  \"2000s\": this.props.dataArr1[12],\n                  \"2010s\": this.props.dataArr1[13]\n                }}\n              />\n              <small className=\"font-weight-bold mx-auto\">{this.state.disclaimer}</small>\n            </div>\n          ) : (\n            <div className=\"modal-body\">\n              <p> All Time Rank = {this.props.rank}</p>\n              <LineChart\n                colors={[\"#547980\", \"#547980\"]}\n                data={{\n                  \"1880s\": this.props.dataArr2[0],\n                  \"1890s\": this.props.dataArr2[1],\n                  \"1900s\": this.props.dataArr2[2],\n                  \"1910s\": this.props.dataArr2[3],\n                  \"1920s\": this.props.dataArr2[4],\n                  \"1930s\": this.props.dataArr2[5],\n                  \"1940s\": this.props.dataArr2[6],\n                  \"1950s\": this.props.dataArr2[7],\n                  \"1960s\": this.props.dataArr2[8],\n                  \"1970s\": this.props.dataArr2[9],\n                  \"1980s\": this.props.dataArr2[10],\n                  \"1990s\": this.props.dataArr2[11],\n                  \"2000s\": this.props.dataArr2[12],\n                  \"2010s\": this.props.dataArr2[13]\n                }}\n              />\n              <small className=\"font-weight-bold mx-auto\">{this.state.disclaimer}</small>\n            </div>\n          )}\n          {this.props.title ? (\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={this.props.handleClose}\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          ) : (\n            <div className=\"modal-footer space-around\">\n              <h5\n                className=\"hover\"\n                onClick={() => this.setState({ status: \"count\", disclaimer: \"*** higher count is more popular ***\" })}\n              >\n                {\" \"}\n                Count{\" \"}\n              </h5>\n              <h5\n                className=\"hover\"\n                onClick={() => this.setState({ status: \"rank\", disclaimer: \"*** lower rank is more popular ***\"  })}\n              >\n                {\" \"}\n                Rank{\" \"}\n              </h5>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={this.props.handleClose}\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport Wrapper from \"../components/Wrapper\";\nimport List from \"../components/List\";\nimport LetterForm from \"../components/LetterForm\";\nimport NumberForm from \"../components/NumberForm\";\nimport Modal from \"../components/Modal\";\nimport API from \"../utils/API\";\n\nclass App extends Component {\n  state = {\n    showModal: false,\n    male: false,\n    female: false,\n    minLength: 1,\n    maxLength: 100,\n    isLoading: false,\n    letterrows: [0],\n    numberrows: [0],\n    letterRowLength: 0,\n    numberRowLength: 0,\n    results: [],\n    letterInputs: [],\n    letterInputClasses: [],\n    letterDropdownClasses: [],\n    numberInputs: [],\n    numberDropdownClassesA: [],\n    numberDropdownClassesB: [],\n    showResults: 20,\n    moreResults: 100,\n    totalCount: -1,\n    sort: \"Most - Least Popular\",\n    letterErrorMessage: [],\n    numberErrorMessage: [],\n    modalTitle: \"\",\n    modalMessages: [],\n    query: \"\",\n    name: \"\",\n    gender: \"\",\n    count: 0,\n    rank: 0,\n    dataArr1: [],\n    dataArr2: []\n  };\n\n  componentWillMount() {\n    //Encode %25u%25,%25e%25&MF&%5B%7B%22Rank_188x%22:%7B%22$between%22:%5B3,%20500%5D%7D%7D,%7B%22Rank_201x%22:%7B%22$between%22:%5B10,%202000%5D%7D%7D%5D&100&%5B%5B%22id%22,%22ASC%22%5D%5D\n    //Decode %u%,%e%&MF&[{\"Rank_188x\":{\"$between\":[3, 500]}},{\"Rank_201x\":{\"$between\":[10, 2000]}}]&100&[[\"id\",\"ASC\"]]\n    //%25u%25,%25e%25&MF&%5B%7B\"Rank_188x\":%7B\"$between\":%5B3,%20500%5D%7D%7D,%7B\"Rank_201x\":%7B\"$between\":%5B10,%202000%5D%7D%7D%5D&100&%5B%5B\"id\",\"ASC\"%5D%5D\n    //%25u%25,%25e%25&MF&%5B%7B\"Rank_188x\":%7B\"$between\":%5B3,%20500%5D%7D%7D,%7B\"Rank_201x\":%7B\"$between\":%5B10,%202000%5D%7D%7D%5D\n    //%25u%25,%25e%25\n    //MF\n    //%5B%7B%22Rank_188x%22:%7B%22$between%22:%5B3,%20500%5D%7D%7D,%7B%22Rank_201x%22:%7B%22$between%22:%5B10,%202000%5D%7D%7D%5D\n    let male = false;\n    let female = false;\n    let lettersArr = [];\n    let genderArr = [];\n    let letterInputClass = [];\n    let letterDropdownClass = [];\n    let letterError = [];\n    let letterRow = [];\n    const { savedQuery } = this.props.match.params;\n    let savedQueryEncode = encodeURI(savedQuery);\n    let savedQueryDecode = decodeURI(savedQueryEncode);\n    if (savedQuery) {\n      let fields = savedQueryDecode.split(\"&\");\n      let letters = fields[0].split(\",\");\n      for (let i = 0; i < letters.length; i++) {\n        if (letters[i]) {\n          letterRow[i] = i;\n          lettersArr[i] = { $like: letters[i] };\n          letterInputClass[i] = \"no-border\";\n          letterDropdownClass[i] = \"no-border\";\n          letterError[i] = \"\";\n        }\n      }\n      if (fields[1] === \"M\") {\n        male = true;\n        genderArr = [\"M\"];\n      } else if (fields[1] === \"F\") {\n        female = true;\n        genderArr = [\"F\"];\n      } else if (fields[1] === \"MF\" || fields[1] === \"FM\") {\n        male = true;\n        female = true;\n        genderArr = [\"M\", \"F\"];\n      }\n      let numbers = [];\n      if (fields[4]) {\n        numbers = JSON.parse(fields[4]);\n      }\n      let numberRow = [];\n      let numDD = [];\n      let numErr = [];\n      for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i]) {\n          numberRow[i] = i;\n          numDD[i] = \"no-border\";\n          numErr[i] = \"\";\n        }\n      }\n      this.setState({\n        male: male,\n        female: female,\n        minLength: parseInt(fields[2]),\n        maxLength: parseInt(fields[3]),\n        letterrows: letterRow,\n        letterInputs: lettersArr,\n        letterRowLength: lettersArr.length - 1,\n        letterDropdownClasses: letterDropdownClass,\n        letterInputClasses: letterInputClass,\n        letterErrorMessage: letterError,\n        numberInputs: numbers,\n        numberRowLength: numbers.length,\n        numberrows: numberRow,\n        numberDropdownClassesA: numDD,\n        numberDropdownClassesB: numDD,\n        numberErrorMessage: numErr,\n        moreResults: parseInt(fields[5])\n      });\n      let query = {\n        letters: lettersArr,\n        gender: genderArr,\n        min: parseInt(fields[2]),\n        max: parseInt(fields[3]),\n        numbers: numbers,\n        limit: parseInt(fields[5]),\n        sort: JSON.parse(fields[6])\n      };\n      console.log(query);\n      API.findNames(query)\n        .then(res => {\n          if (res.data.count >= 20) {\n            this.setState({\n              totalCount: res.data.count,\n              results: res.data.rows,\n              isLoading: true\n            });\n          } else {\n            this.setState({\n              totalCount: res.data.count,\n              results: res.data.rows,\n              isLoading: false\n            });\n          }\n        })\n        .catch(err => {\n          console.log(\"find names error: \");\n          console.log(err);\n        });\n    }\n  }\n\n  updateModal = type => {\n    let title = \"Number Options\";\n    let messages = [\n      {\n        cat: \"Rank\",\n        message:\n          \"orders names from most popular, 1, to least popular for a selected time period.  This search returns names whose position is in the inputted range for the selected time period.  (lower rank is more popular)\"\n      },\n      {\n        cat: \"Count\",\n        message:\n          \"is the total number of babies given that name for a selected time period.  This search returns names whose count is in the inputted range for the selected time period.  (higher count is more popular)\"\n      }\n    ];\n    if (type === \"letter\") {\n      title = \"Letter Options\";\n      messages = [\n        {\n          cat: \"Contains: \",\n          message:\n            \"Returns only names that contain the letter or string inputted.\"\n        },\n        {\n          cat: \"Starts With: \",\n          message:\n            \"Returns only names that start with the letter or string inputted.\"\n        },\n        {\n          cat: \"Ends With: \",\n          message:\n            \"Returns only names that end with the letter or string inputted.\"\n        }\n      ];\n    }\n    this.setState({\n      showModal: true,\n      modalMessages: messages,\n      modalTitle: title\n    });\n  };\n\n  handleClickLetter = () => {\n    let rows = this.state.letterrows;\n    let index = this.state.letterRowLength + 1;\n    rows.push(index);\n    this.setState({ letterrows: rows, letterRowLength: index });\n  };\n\n  grabLetterInput = (index, output) => {\n    let realIndex = index;\n    for (let i = 0; i < this.state.letterrows.length; i++) {\n      if (index === this.state.letterrows[i]) {\n        realIndex = i;\n      }\n    }\n    let newArray = this.state.letterInputs;\n    newArray[realIndex] = output;\n    this.setState({ letterInputs: newArray });\n  };\n\n  handleClickNumber = () => {\n    let rows = this.state.numberrows;\n    let index = this.state.numberRowLength + 1;\n    rows.push(index);\n    this.setState({ numberrows: rows, numberRowLength: index });\n  };\n\n  grabNumberInput = (index, output) => {\n    let realIndex = index;\n    for (let i = 0; i < this.state.numberrows.length; i++) {\n      if (index === this.state.numberrows[i]) {\n        realIndex = i;\n      }\n    }\n    let newArray = this.state.numberInputs;\n    newArray[realIndex] = output;\n    this.setState({ numberInputs: newArray });\n  };\n\n  checkErroroneousInputs = () => {\n    let submit = true;\n    let errorArray = [];\n    let letterInputClass = this.state.letterInputClasses;\n    let letterDropdowns = this.state.letterDropdownClasses;\n    let letterError = this.state.letterErrorMessage;\n    let dropdownA = this.state.numberDropdownClassesA;\n    let dropdownB = this.state.numberDropdownClassesB;\n    let numberError = this.state.numberErrorMessage;\n    //loop through letterInputs\n    for (let i = 0; i < this.state.letterInputs.length; i++) {\n      if (this.state.letterInputs[i]) {\n        if (\n          this.state.letterInputs[i].$like &&\n          (this.state.letterInputs[i].$like === \"%%\" ||\n            this.state.letterInputs[i].$like === \"%\" ||\n            this.state.letterInputs[i].$like === \"%Letter(s)%\")\n        ) {\n          //change border of letter-input-#\n          submit = false;\n          let index = this.state.letterrows[i];\n          letterDropdowns[index] = \"no-border\";\n          letterInputClass[index] = \"red-border\";\n          letterError[index] = \"*Input a value.*\";\n        } else if (this.state.letterInputs[i] === \"string\") {\n          //change border of dropdown-toggle-#\n          submit = false;\n          letterInputClass[this.state.letterrows[i]] = \"no-border\";\n          letterDropdowns[this.state.letterrows[i]] = \"red-border\";\n          letterError[this.state.letterrows[i]] = \"*Make a selection.*\";\n        } else {\n          letterInputClass[this.state.letterrows[i]] = \"no-border\";\n          letterDropdowns[this.state.letterrows[i]] = \"no-border\";\n          letterError[this.state.letterrows[i]] = \"\";\n        }\n      }\n      //check for 2 of the same inputs, or 2 begins withs, or 2 ends with\n      if (i + 1 < this.state.letterInputs.length) {\n        for (let j = i + 1; j < this.state.letterInputs.length; j++) {\n          if (\n            this.state.letterInputs[i] &&\n            this.state.letterInputs[j] &&\n            this.state.letterInputs[j][\n              Object.getOwnPropertyNames(this.state.letterInputs[j])[0]\n            ][0] !== \"%Letter(s)%\" &&\n            this.state.letterInputs[j] !== \"string\"\n          ) {\n            if (\n              (Object.getOwnPropertyNames(this.state.letterInputs[i])[0] ===\n                Object.getOwnPropertyNames(this.state.letterInputs[j])[0] &&\n                this.state.letterInputs[i][\n                  Object.getOwnPropertyNames(this.state.letterInputs[i])[0]\n                ] ===\n                  this.state.letterInputs[j][\n                    Object.getOwnPropertyNames(this.state.letterInputs[j])[0]\n                  ]) ||\n              (this.state.letterInputs[i][\n                Object.getOwnPropertyNames(this.state.letterInputs[i])[0]\n              ][0] !== \"%\" &&\n                this.state.letterInputs[j][\n                  Object.getOwnPropertyNames(this.state.letterInputs[j])[0]\n                ][0] !== \"%\") ||\n              (this.state.letterInputs[i][\n                Object.getOwnPropertyNames(this.state.letterInputs[i])[0]\n              ].substr(-1) !== \"%\" &&\n                this.state.letterInputs[j][\n                  Object.getOwnPropertyNames(this.state.letterInputs[j])[0]\n                ].substr(-1) !== \"%\")\n            ) {\n              errorArray.push(this.state.letterrows[i]);\n              errorArray.push(this.state.letterrows[j]);\n              submit = false;\n            }\n          }\n        }\n      }\n      if (errorArray) {\n        for (let k = 0; k < errorArray.length; k++) {\n          letterInputClass[errorArray[k]] = \"red-border\";\n          letterDropdowns[errorArray[k]] = \"red-border\";\n          letterError[errorArray[k]] = \"*Incorrect Input.*\";\n        }\n      }\n    }\n\n    //loop through numberInputs\n    errorArray = [];\n    for (let i = 0; i < this.state.numberInputs.length; i++) {\n      if (this.state.numberInputs[i]) {\n        if (\n          Object.getOwnPropertyNames(this.state.numberInputs[i]).length === 0\n        ) {\n          submit = false;\n          dropdownB[this.state.numberrows[i]] = \"red-border\";\n          numberError[this.state.numberrows[i]] = \"*Make a selection.*\";\n        } else if (\n          Object.getOwnPropertyNames(this.state.numberInputs[i])[0] ===\n            \"Rank_Year(s)\" ||\n          Object.getOwnPropertyNames(this.state.numberInputs[i])[0] ===\n            \"Count_Year(s)\"\n        ) {\n          submit = false;\n          dropdownA[this.state.numberrows[i]] = \"red-border\";\n          numberError[this.state.numberrows[i]] = \"*Make a selection.*\";\n        } else {\n          dropdownA[this.state.numberrows[i]] = \"no-border\";\n          dropdownB[this.state.numberrows[i]] = \"no-border\";\n          numberError[this.state.numberrows[i]] = \"\";\n        }\n      }\n      //check for 2 of the same inputs\n      if (i + 1 < this.state.numberInputs.length) {\n        for (let j = i + 1; j < this.state.numberInputs.length; j++) {\n          if (this.state.numberInputs[i] && this.state.numberInputs[j]) {\n            if (\n              Object.getOwnPropertyNames(this.state.numberInputs[i])[0] ===\n                Object.getOwnPropertyNames(this.state.numberInputs[j])[0] &&\n              Object.getOwnPropertyNames(this.state.numberInputs[i])[0]\n            ) {\n              errorArray.push(this.state.numberrows[i]);\n              errorArray.push(this.state.numberrows[j]);\n              submit = false;\n            }\n          }\n        }\n      }\n      if (errorArray) {\n        for (let k = 0; k < errorArray.length; k++) {\n          dropdownA[errorArray[k]] = \"red-border\";\n          dropdownB[errorArray[k]] = \"red-border\";\n          numberError[errorArray[k]] = \"*Make a selection.*\";\n        }\n      }\n    }\n    let newResults = this.state.results;\n    let count = this.state.totalCount;\n    if (!submit) {\n      newResults = [];\n      count = \"\";\n    }\n    this.setState({\n      letterInputClasses: letterInputClass,\n      letterDropdownClasses: letterDropdowns,\n      letterErrorMessage: letterError,\n      numberDropdownClassesA: dropdownA,\n      numberDropdownClassesB: dropdownB,\n      numberErrorMessage: numberError,\n      results: newResults,\n      totalCount: count,\n      isLoading: submit\n    });\n    if (submit) {\n      for (let l = 0; l < this.state.numberInputs.length; l++) {\n        dropdownA[l] = \"no-border\";\n        dropdownB[l] = \"no-border\";\n        numberError[l] = \"\";\n      }\n      this.handleSubmit(20, this.state.moreResults);\n    }\n    errorArray = [];\n  };\n\n  handleSubmit = (results, moreResults) => {\n    this.setState({ showResults: results });\n    let sortQuery = [[\"id\", \"ASC\"]];\n    if (this.state.sort === \"A - Z\") {\n      sortQuery = [[\"Name\", \"ASC\"]];\n    } else if (this.state.sort === \"Z - A\") {\n      sortQuery = [[\"Name\", \"DESC\"]];\n    } else if (this.state.sort === \"Most - Least Popular\") {\n      sortQuery = [[\"id\", \"ASC\"]];\n    } else if (this.state.sort === \"Least - Most Popular\") {\n      sortQuery = [[\"id\", \"DESC\"]];\n    }\n    let queryGender = \"MF\";\n    let lettersArr = this.state.letterInputs;\n    let query = {\n      letters: lettersArr,\n      gender: [\"F\", \"M\"],\n      min: this.state.minLength,\n      max: this.state.maxLength,\n      numbers: this.state.numberInputs,\n      limit: moreResults,\n      sort: sortQuery\n    };\n    if (this.state.female && !this.state.male) {\n      query = {\n        letters: lettersArr,\n        gender: [\"F\"],\n        min: this.state.minLength,\n        max: this.state.maxLength,\n        numbers: this.state.numberInputs,\n        limit: moreResults,\n        sort: sortQuery\n      };\n      queryGender = \"F\";\n    } else if (!this.state.female && this.state.male) {\n      query = {\n        letters: lettersArr,\n        gender: [\"M\"],\n        min: this.state.minLength,\n        max: this.state.maxLength,\n        numbers: this.state.numberInputs,\n        limit: moreResults,\n        sort: sortQuery\n      };\n      queryGender = \"M\";\n    }\n    let queryLetter = \"\";\n    for (let i = 0; i < this.state.letterInputs.length; i++) {\n      queryLetter += this.state.letterInputs[i].$like;\n      queryLetter += \",\";\n    }\n    let queryLink =\n      queryLetter +\n      \"&\" +\n      queryGender +\n      \"&\" +\n      this.state.minLength +\n      \"&\" +\n      this.state.maxLength +\n      \"&\" +\n      JSON.stringify(this.state.numberInputs) +\n      \"&\" +\n      moreResults +\n      \"&\" +\n      JSON.stringify(sortQuery);\n    queryLink = encodeURI(queryLink);\n    this.props.history.push(\"/\" + encodeURI(queryLink));\n    API.findNames(query)\n      .then(res => {\n        if (res.data.count >= 20) {\n          this.setState({\n            totalCount: res.data.count,\n            results: res.data.rows,\n            isLoading: true\n          });\n        } else {\n          this.setState({\n            totalCount: res.data.count,\n            results: res.data.rows,\n            isLoading: false\n          });\n        }\n      })\n      .catch(err => {\n        console.log(\"find names error: \");\n        console.log(err);\n      });\n  };\n\n  increaseCount = () => {\n    let newCount = this.state.showResults + 20;\n    let load = this.state.isLoading;\n    if (newCount >= this.state.totalCount) {\n      load = false;\n    }\n    this.setState({ showResults: newCount, isLoading: load });\n  };\n\n  increaseResults = () => {\n    let newCount = this.state.moreResults + 100;\n    this.setState({ moreResults: newCount });\n    this.handleSubmit(newCount - 80, newCount);\n  };\n\n  updateLoad = () => {\n    this.setState({ isLoading: false });\n  };\n\n  removeLetterRow = index => {\n    let realIndex = index;\n    for (let j = 0; j < this.state.letterrows.length; j++) {\n      if (this.state.letterrows[j] === index) {\n        realIndex = j;\n      }\n    }\n    let newArray = this.state.letterInputs;\n    newArray.splice(realIndex, 1);\n    let newRows = this.state.letterrows;\n    newRows.splice(realIndex, 1);\n    this.setState({\n      letterInputs: newArray,\n      letterrows: newRows\n    });\n    //this.handleSubmit(20, this.state.moreResults);\n  };\n\n  removeNumberRow = index => {\n    let realIndex = index;\n    for (let i = 0; i < this.state.numberrows.length; i++) {\n      if (this.state.numberrows[i] === index) {\n        realIndex = i;\n      }\n    }\n    let newArray = this.state.numberInputs;\n    newArray.splice(realIndex, 1);\n    let newRows = this.state.numberrows;\n    newRows.splice(realIndex, 1);\n    this.setState({\n      numberInputs: newArray,\n      numberrows: newRows\n    });\n    //this.handleSubmit(20, this.state.moreResults);\n  };\n\n  updateDropdownOptions = (input, evt) => {\n    evt.preventDefault();\n    this.setState({ sort: input });\n  };\n\n  nameClicked = (name, gender, evt) => {\n    evt.preventDefault();\n    this.setState({ showModal: true });\n    let query = {\n      name: name,\n      gender: gender\n    };\n    API.findName(query)\n      .then(res => {\n        console.log(\"found name\");\n        console.log(res.data);\n        this.setState({\n          name: res.data[0].Name,\n          gender: res.data[0].Gender,\n          count: res.data[0].Count_AllTime,\n          rank: res.data[0].Rank_AllTime,\n          dataArr1: [\n            res.data[0].Count_188x,\n            res.data[0].Count_189x,\n            res.data[0].Count_190x,\n            res.data[0].Count_191x,\n            res.data[0].Count_192x,\n            res.data[0].Count_193x,\n            res.data[0].Count_194x,\n            res.data[0].Count_195x,\n            res.data[0].Count_196x,\n            res.data[0].Count_197x,\n            res.data[0].Count_198x,\n            res.data[0].Count_199x,\n            res.data[0].Count_200x,\n            res.data[0].Count_201x\n          ],\n          dataArr2: [\n            res.data[0].Rank_188x,\n            res.data[0].Rank_189x,\n            res.data[0].Rank_190x,\n            res.data[0].Rank_191x,\n            res.data[0].Rank_192x,\n            res.data[0].Rank_193x,\n            res.data[0].Rank_194x,\n            res.data[0].Rank_195x,\n            res.data[0].Rank_196x,\n            res.data[0].Rank_197x,\n            res.data[0].Rank_198x,\n            res.data[0].Rank_199x,\n            res.data[0].Rank_200x,\n            res.data[0].Rank_201x\n          ]\n        });\n      })\n      .catch(err => {\n        console.log(\"find name error: \");\n        console.log(err);\n      });\n  };\n\n  handleClose = () => {\n    this.setState({\n      showModal: false,\n      dataArr1: [],\n      dataArr2: [],\n      modalTitle: \"\",\n      modalMessages: [],\n      name: \"\",\n      gender: \"\",\n      count: 0,\n      rank: 0\n    });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <form className=\"justify-content-center mx-0 px-0 text-center align-items-center\">\n          <div className=\"row mr-0 justify-content-center mx-auto\">\n            <div className=\"form-inline form-check form-check-inline mb-2 col-md-5\">\n              <label className=\"my-0\">\n                Male\n                <input\n                  className=\"my-0\"\n                  type=\"checkbox\"\n                  onChange={e => this.setState({ male: !this.state.male })}\n                  checked={this.state.male}\n                />\n              </label>\n              <label className=\"my-0\">\n                Female\n                <input\n                  className=\"my-0\"\n                  type=\"checkbox\"\n                  onChange={e => this.setState({ female: !this.state.female })}\n                  checked={this.state.female}\n                />\n              </label>\n            </div>\n            <div className=\"form-inline col-md-5 mt-xs-2 mt-md-0\">\n              <div className=\"form-group ml-1\">\n                <label className=\"mb-0 mx-auto\">Min Length</label>\n                <input\n                  className=\"form-control form-control-sm mx-auto my-0 number\"\n                  type=\"number\"\n                  min=\"1\"\n                  max={this.state.maxLength}\n                  placeholder={this.state.minLength}\n                  onChange={e =>\n                    this.setState({ minLength: parseInt(e.target.value) })\n                  }\n                />\n              </div>\n              <div className=\"form-group ml-1\">\n                <label className=\"mb-0 mx-auto\">Max Length</label>\n                <input\n                  className=\"form-control form-control-sm mx-auto my-0 number\"\n                  type=\"number\"\n                  min={this.state.minLength}\n                  max=\"100\"\n                  placeholder={this.state.maxLength}\n                  onChange={e =>\n                    this.setState({ maxLength: parseInt(e.target.value) })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </form>\n        <div className=\"text-center row justify-content-center mx-auto\">\n          <div className=\"col-md-4 px-0\">\n            {this.state.letterrows.map(r => (\n              <LetterForm\n                key={r}\n                className={r}\n                inputs={\n                  this.state.letterInputs[r]\n                    ? this.state.letterInputs[r].$like\n                    : \"Letter(s)\"\n                }\n                errorMessage={this.state.letterErrorMessage[r]}\n                inputClass={this.state.letterInputClasses[r]}\n                dropdownClass={this.state.letterDropdownClasses[r]}\n                appendOutput={this.grabLetterInput}\n                removeLetterRow={this.removeLetterRow}\n                updateModal={this.updateModal}\n              />\n            ))}\n          </div>\n          <div className=\"col-md-8 px-0\">\n            {this.state.numberrows.map(r => (\n              <NumberForm\n                key={r}\n                className={r}\n                inputs={this.state.numberInputs[r]}\n                errorMessage={this.state.numberErrorMessage[r]}\n                dropdownClassA={this.state.numberDropdownClassesA[r]}\n                dropdownClassB={this.state.numberDropdownClassesB[r]}\n                appendOutput={this.grabNumberInput}\n                male={this.state.male}\n                female={this.state.female}\n                removeNumberRow={this.removeNumberRow}\n                updateModal={this.updateModal}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"text-center white-text row justify-content-center mx-auto\">\n          <button\n            className=\"link-button col-md-4\"\n            onClick={this.handleClickLetter}\n          >\n            + More Letter Search Terms\n          </button>\n          <button\n            className=\"link-button col-md-8\"\n            onClick={this.handleClickNumber}\n          >\n            + More Number Search Terms\n          </button>\n        </div>\n        <div className=\"row justify-content-center col-12 mx-auto\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary px-1 submit\"\n            onClick={e => this.checkErroroneousInputs()}\n          >\n            Submit\n          </button>\n          {this.state.totalCount < 0 ? (\n            <h4> </h4>\n          ) : (\n            <h4 className=\"ml-2 my-auto text-white\">\n              {\" \"}\n              {this.state.totalCount}\n            </h4>\n          )}\n          {this.state.totalCount <= 1 ? (\n            <h4> </h4>\n          ) : (\n            <div>\n              <button\n                className={`btn btn-secondary dropdown-toggle px-1`}\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                {this.state.sort}\n              </button>\n              <div\n                className=\"dropdown-menu\"\n                aria-labelledby=\"dropdownMenuButton\"\n              >\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateDropdownOptions(\"A - Z\", e)}\n                >\n                  A - Z\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateDropdownOptions(\"Z - A\", e)}\n                >\n                  Z - A\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e =>\n                    this.updateDropdownOptions(\"Most - Least Popular\", e)\n                  }\n                >\n                  Most - Least Popular\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e =>\n                    this.updateDropdownOptions(\"Least - Most Popular\", e)\n                  }\n                >\n                  Least - Most Popular\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"row justify-content-center col-12 mx-auto\">\n          <List\n            results={this.state.results}\n            total={this.state.totalCount}\n            count={this.state.showResults}\n            increaseCount={this.increaseCount}\n            increaseResults={this.increaseResults}\n            updateLoad={this.updateLoad}\n            loading={this.state.isLoading}\n            nameClicked={this.nameClicked}\n          />\n        </div>\n        <Modal\n          show={this.state.showModal}\n          handleClose={this.handleClose}\n          title={this.state.modalTitle}\n          messages={this.state.modalMessages}\n          name={this.state.name}\n          gender={this.state.gender}\n          count={this.state.count}\n          rank={this.state.rank}\n          totalCount={this.state.totalCount}\n          dataArr1={this.state.dataArr1}\n          dataArr2={this.state.dataArr2}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\n\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <p className=\"mx-2 p-2 yellow-text\">Unpopular Baby originally started as a python script that parsed the Social Security Administration Database to come up with a list of possible names to name our son, Bryce.  It has morphed into a more user friendly web application based on friend requests.  Happy searching!</p>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\n\r\nclass Example extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <div className=\"mx-auto text-center\">\r\n          <img\r\n            className=\"image-size\"\r\n            src=\"/assets/images/unpopbaby.PNG\"\r\n            alt=\"example search\"\r\n          />\r\n          <p className=\"yellow-text p-2 image-size mx-auto\">\r\n            The above search searches for a male name with a length between 1\r\n            and 8 characters that begins with a B, contains a y, and was\r\n            relatively unpopular in the 2000s and 2010s.\r\n          </p>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;\r\n","import React from \"react\";\n\nfunction NoMatch() {\n  return (\n    <div>\n\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n              </span>\n        </h1>\n\n    </div>\n  );\n}\n\nexport default NoMatch;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Main from \"./pages/Main\";\nimport About from \"./pages/About\";\nimport Example from \"./pages/Example\";\nimport ErrorPage from \"./pages/ErrorPage\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Header />\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Main} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/example\" component={Example} />\n            <Route path=\"/:savedQuery\" component={Main} />\n            <Route component={ErrorPage} />\n          </Switch>\n        </BrowserRouter>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}