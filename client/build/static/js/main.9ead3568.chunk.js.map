{"version":3,"sources":["components/Wrapper/index.js","components/Header/index.js","components/List/index.js","components/LetterForm/index.js","components/NumberForm/index.js","components/Modal/index.js","utils/API.js","pages/Main.js","pages/About.js","pages/Example.js","pages/Contact.js","pages/ErrorPage.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Header","BurgerMenu","noOverlay","href","Component","List","_this","this","newArray","results","slice","count","map","result","key","id","onClick","e","nameClicked","Name","Gender","updateLoad","_this2","lib_default","dataLength","next","increaseCount","hasMore","loading","loader","renderList","LetterForm","state","letterOptions","dropdown","input","output","updateLetterOptions","letterInput","evt","preventDefault","$like","$notlike","setState","appendOutput","updateOutput","target","value","hideForm","r","length","removeLetterRow","clearBorders","componentDidUpdate","prevProps","inputs","componentMount","componentDidMount","includes","replace","dropdowns","charAt","substr","concat","dropdownClass","type","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","inputClass","onChange","nth","first","updateModal","errorMessage","NumberForm","numericalOptions","years","yearCol","min","max","myData","minValue","maxValue","slider","male","female","Object","keys","hasOwnProperty","options","indexOf","yearCl","updateNumbers","startMin","startMax","year","outputVal","$between","gender","getEndpoints","checkSliderMinMax","updateNumericalOptions","input2","prevMax","prevMin","minPercentage","maxPercentage","Math","round","query","defineProperty","updateYearOptions","input1","removeNumberRow","Count_AllTime","substring","dropdownClassA","dropdownClassB","js_default","Modal","status","disclaimer","showHideStyle","show","heading","title","name","prettyMessage","messages","message","cat","role","style","display","handleClose","data-dismiss","aria-label","aria-hidden","react_chartkick_esm","colors","data","1880s","dataArr1","1890s","1900s","1910s","1920s","1930s","1940s","1950s","1960s","1970s","1980s","1990s","2000s","2010s","rank","dataArr2","API","findNames","console","log","axios","post","findName","send","App","showModal","minLength","maxLength","isLoading","letterrows","numberrows","letterRowLength","numberRowLength","letterInputs","letterInputClasses","letterDropdownClasses","numberInputs","numberDropdownClassesA","numberDropdownClassesB","showResults","moreResults","totalCount","sort","sortDisplay","sortExtra","letterErrorMessage","numberErrorMessage","modalTitle","modalMessages","handleClickLetter","rows","index","push","grabLetterInput","realIndex","i","handleClickNumber","grabNumberInput","sortDisp","getOwnPropertyNames","split","checkErroroneousInputs","submit","errorArray","nullRows","letterInputClass","letterDropdowns","letterError","dropdownA","dropdownB","numberError","iString","antiString","startString","endString","dncString","j","k","splice","newResults","l","handleSubmit","sortOn","sortQuery","floor","random","queryGender","lettersArr","letters","numbers","limit","queryLetter","queryLink","JSON","stringify","encodeURI","history","then","res","seed","catch","err","newCount","load","increaseResults","newRows","pop","updateDropdownOptions","updateDropdownOptionsTwo","Rank_AllTime","Count_188x","Count_189x","Count_190x","Count_191x","Count_192x","Count_193x","Count_194x","Count_195x","Count_196x","Count_197x","Count_198x","Count_199x","Count_200x","Count_201x","Rank_188x","Rank_189x","Rank_190x","Rank_191x","Rank_192x","Rank_193x","Rank_194x","Rank_195x","Rank_196x","Rank_197x","Rank_198x","Rank_199x","Rank_200x","Rank_201x","clearLetterBorders","genderArr","letterDropdownClass","letterRow","savedQuery","match","params","savedQueryEncode","savedQueryDecode","decodeURI","fields","numbersArr","parse","numberRow","numDD","numErr","letterArrLen","sortDD","parseInt","_this3","components_Wrapper","checked","placeholder","components_LetterForm","components_NumberForm","components_List","total","components_Modal","About","Example","src","alt","Contact","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","displayErrors","bind","assertThisInitialized","document","getElementById","reset","event","checkValidity","FormData","set","get","trim","email","comments","response","msg","resetForm","onSubmit","noValidate","required","NoMatch","components_Header","BrowserRouter","Switch","Route","exact","path","component","Main","ErrorPage","Boolean","window","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ead3568.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Wrapper(props) {\n  return <div className=\"mx-auto\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\n\nimport \"./styles.css\";\n\nclass Header extends Component {\n  \n  render() {\n    return (\n      <div>\n        <Menu noOverlay>\n          <a className=\"menu-item\" href=\"/\">\n            Search\n          </a>\n\n          <a className=\"menu-item\" href=\"/about\">\n            About\n          </a>\n\n          <a className=\"menu-item\" href=\"/example\">\n            Example\n          </a>\n\n          <a className=\"menu-item\" href=\"/contact\">\n            Contact\n          </a>\n\n        </Menu>\n        <header className=\"navbar text-center col-12 justify-content-center pb-0\">\n          <a href=\"/\" className=\"no-underline\">\n            <h1>\n              <i className=\"fas fa-baby-carriage\" />\n              <span className=\"text1\"> Unpopular Baby Names </span>\n              <i className=\"fas fa-baby\" />\n            </h1>\n          </a>\n          <h4 className=\"subhead text-center col-12\">\n            A tool to find names based on popularity\n          </h4>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./styles.css\";\n\nclass List extends Component {\n  renderList() {\n    let newArray = this.props.results.slice(0, this.props.count);\n    return (\n      <div className=\"col-12\">\n        <ol>\n          {newArray.map(result => (\n            <li key={result.id}>\n              <h4\n                onClick={e =>\n                  this.props.nameClicked(result.Name, result.Gender, e)\n                }\n                className=\"text-center\"\n              >\n                {result.Name}{\" \"}\n                {result.Gender === \"M\"\n                  ? \"- male\"\n                  : result.Gender === \"F\"\n                  ? \"- female\"\n                  : \"- both\"}\n              </h4>\n            </li>\n          ))}\n        </ol>\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    this.props.updateLoad();\n  }\n\n  render() {\n    return (\n      <div>\n        <InfiniteScroll\n          dataLength={this.props.count}\n          next={() => {\n            this.props.increaseCount();\n          }}\n          hasMore={this.props.loading}\n          loader={<h4>Loading...</h4>}\n        >\n          {this.renderList()}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport \"react-input-range/lib/css/index.css\";\n\nclass LetterForm extends Component {\n  state = {\n    letterOptions: \"Letter Options\",\n    dropdown: \"Letter Options\",\n    input: \"Letter(s)\",\n    output: \"\"\n  };\n\n  updateLetterOptions = (letterInput, evt) => {\n    evt.preventDefault();\n    let output = \"\";\n    if (letterInput === \"Contains\") {\n      output = { $like: \"%\" + this.state.input + \"%\" };\n    } else if (letterInput === \"Does Not Contain\") {\n      output = { $notlike: \"!%\" + this.state.input + \"%\" };\n    } else if (letterInput === \"Starts With\") {\n      output = { $like: this.state.input + \"%\" };\n    } else if (letterInput === \"Does Not Start With\") {\n      output = { $notlike: \"!\" + this.state.input + \"%\" };\n    } else if (letterInput === \"Ends With\") {\n      output = { $like: \"%\" + this.state.input };\n    } else if (letterInput === \"Does Not End With\") {\n      output = { $notlike: \"!%\" + this.state.input };\n    }\n    this.setState({\n      letterOptions: letterInput,\n      dropdown: letterInput,\n      output: output\n    });\n    this.props.appendOutput(this.props.className, output);\n  };\n\n  updateOutput = evt => {\n    let input = evt.target.value;\n    if (input === \"Letter(s)\") {\n      input = \"\";\n    }\n    let output = \"string\";\n    if (this.state.dropdown === \"Contains\") {\n      output = { $like: \"%\" + input + \"%\" };\n    } else if (this.state.dropdown === \"Does Not Contain\") {\n      output = { $notlike: \"!%\" + input + \"%\" };\n    } else if (this.state.dropdown === \"Starts With\") {\n      output = { $like: input + \"%\" };\n    } else if (this.state.dropdown === \"Does Not Start With\") {\n      output = { $notlike: \"!\" + input + \"%\" };\n    } else if (this.state.dropdown === \"Ends With\") {\n      output = { $like: \"%\" + input };\n    } else if (this.state.dropdown === \"Does Not End With\") {\n      output = { $notlike: \"!%\" + input };\n    }\n    this.setState({ input: input, output: output });\n    this.props.appendOutput(this.props.className, output);\n  };\n\n  hideForm = (e, r) => {\n    if (this.props.length > 1) {\n      this.props.removeLetterRow(this.props.className);\n    } else {\n      this.setState({\n        letterOptions: \"Letter Options\",\n        dropdown: \"Letter Options\",\n        input: \"Letter(s)\",\n        output: \"\"\n      });\n      this.props.appendOutput(this.props.className, \"\");\n      this.props.clearBorders(r);\n    }\n  };\n\n  componentDidUpdate = prevProps => {\n    if (prevProps.inputs !== this.props.inputs) {\n      this.componentMount();\n    }\n  };\n\n  componentDidMount = () => {\n    this.componentMount();\n  };\n\n  componentMount = () => {\n    if (\n      this.props.inputs &&\n      !this.props.inputs.includes(\"Letter(s)\") &&\n      this.props.inputs !== \"string\"\n    ) {\n      let inputs = this.props.inputs.replace(/%/g, \"\");\n      inputs = inputs.replace(\"!\", \"\");\n\n      let dropdowns = \"Letter Options\";\n      if (\n        this.props.inputs.charAt(0) === \"%\" &&\n        this.props.inputs.charAt(this.props.inputs.length - 1) === \"%\"\n      ) {\n        dropdowns = \"Contains\";\n      } else if (this.props.inputs.charAt(0) === \"!\") {\n        if (this.props.inputs.substr(-1) === \"%\") {\n          if (this.props.inputs.charAt(1) === \"%\") {\n            dropdowns = \"Does Not Contain\";\n          } else {\n            dropdowns = \"Does Not Start With\";\n          }\n        } else {\n          dropdowns = \"Does Not End With\";\n        }\n      } else if (this.props.inputs.charAt(0) === \"%\") {\n        dropdowns = \"Ends With\";\n      } else if (\n        this.props.inputs.charAt(this.props.inputs.length - 1) === \"%\"\n      ) {\n        dropdowns = \"Starts With\";\n      }\n      this.setState({ input: inputs, dropdown: dropdowns });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"max-width\">\n        <div className=\"row justify-content-center mx-auto\">\n          <form className=\"form-inline letters mb-0\">\n            <div className=\"dropdown ml-1\">\n              {this.state.dropdown !== \"Letter Options\" ? (\n                <button\n                  className={`btn btn-secondary dropdown-toggle ml-0 px-1 ${\n                    this.props.dropdownClass\n                  }`}\n                  type=\"button\"\n                  id=\"dropdownMenuButton\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  {this.state.dropdown}\n                </button>\n              ) : (\n                <button\n                  className={`btn btn-secondary dropdown-toggle ml-0 px-1 grey`}\n                  type=\"button\"\n                  id=\"dropdownMenuButton\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  {this.state.dropdown}\n                </button>\n              )}\n              <div\n                className=\"dropdown-menu\"\n                aria-labelledby=\"dropdownMenuButton\"\n              >\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateLetterOptions(\"Contains\", e)}\n                >\n                  Contains\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateLetterOptions(\"Does Not Contain\", e)}\n                >\n                  Does Not Contain\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateLetterOptions(\"Starts With\", e)}\n                >\n                  Starts With\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e =>\n                    this.updateLetterOptions(\"Does Not Start With\", e)\n                  }\n                >\n                  Does Not Start With\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateLetterOptions(\"Ends With\", e)}\n                >\n                  Ends With\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e =>\n                    this.updateLetterOptions(\"Does Not End With\", e)\n                  }\n                >\n                  Does Not End With\n                </button>\n              </div>\n            </div>\n\n            <label className=\"ml-1\">\n              {this.state.input !== \"Letter(s)\" ? (\n                <input\n                  type=\"text\"\n                  className={`form-control letter-input letter-input-${\n                    this.props.className\n                  } ${this.props.inputClass}`}\n                  onChange={e => this.updateOutput(e)}\n                  onClick={e => (e.target.value = \"\")}\n                  value={this.state.input}\n                />\n              ) : (\n                <input\n                  type=\"text\"\n                  className={`form-control letter-input grey letter-input-${\n                    this.props.className\n                  } ${this.props.inputClass}`}\n                  onChange={e => this.updateOutput(e)}\n                  onClick={e => (e.target.value = \"\")}\n                  value={this.state.input}\n                />\n              )}\n            </label>\n          </form>\n          {this.props.length > 1 ||\n          (this.state.dropdown !== \"Letter Options\" ||\n            this.state.input !== \"Letter(s)\") ? (\n            <button\n              type=\"button\"\n              className=\"close text-white ml-1 small\"\n              onClick={e => this.hideForm(e, this.props.nth)}\n            >\n              {\" \"}\n              &times;\n            </button>\n          ) : (\n            <div />\n          )}\n          {this.props.first === this.props.nth ? (\n            <sup className=\"mx-0\">\n              <button type=\"button\" className=\"info text-white mx-0 pr-0 pl-1\">\n                <i\n                  className=\"fas fa-info-circle\"\n                  onClick={() => this.props.updateModal(\"letter\")}\n                />\n              </button>\n            </sup>\n          ) : (\n            <div />\n          )}\n        </div>\n        <div className=\"red-text\">{this.props.errorMessage}</div>\n      </div>\n    );\n  }\n}\n\nexport default LetterForm;\n","import React, { Component } from \"react\";\nimport InputRange from \"react-input-range\";\nimport \"./styles.css\";\nimport \"react-input-range/lib/css/index.css\";\n\nimport myData from \"./max_values_full.json\";\n\nclass NumberForm extends Component {\n  state = {\n    numericalOptions: \"Count\",\n    years: \"All Time\",\n    yearCol: \"AllTime\",\n    value: { min: 0, max: myData[\"Count\"][\"AllTime\"][\"B\"] },\n    minValue: 0,\n    maxValue: myData[\"Count\"][\"AllTime\"][\"B\"],\n    slider: \"\",\n    output: {}\n  };\n\n  componentDidUpdate = prevProps => {\n    if (\n      this.props.male !== prevProps.male ||\n      this.props.female !== prevProps.female\n    ) {\n      if (this.props.inputs) {\n        let key = Object.keys(this.props.inputs)[0];\n        if (!key.includes(\"Year(s)\")) {\n          if (this.props.inputs.hasOwnProperty(key)) {\n            let options = key.substr(0, key.indexOf(\"_\"));\n            let yearCl = key.substr(key.indexOf(\"_\") + 1);\n            this.updateNumbers(\n              options,\n              yearCl,\n              this.props.male,\n              this.props.female\n            );\n          }\n        }\n      }\n      else if (this.state.numericalOptions !== \"Numerical Options\") {\n        this.updateNumbers(\n          this.state.numericalOptions,\n          this.state.yearCol,\n          this.props.male,\n          this.props.female\n        );\n      }\n    }\n    if (prevProps.inputs !== this.props.inputs) {\n      this.componentMount();\n    }\n  };\n\n  componentDidMount = () => {\n    this.componentMount();\n  };\n\n  componentMount = () => {\n    let startMin = 20;\n    let startMax = 80;\n    let options = \"Numerical Options\";\n    let yearCol = \"Year(s)\";\n    let year = \"Year(s)\";\n    let max = 100;\n    let outputVal = this.state.output;\n    if (this.props.inputs) {\n      outputVal = this.props.inputs;\n      let key = Object.keys(this.props.inputs)[0];\n      if (!key.includes(\"Year(s)\")) {\n        if (this.props.inputs.hasOwnProperty(key)) {\n          options = key.substr(0, key.indexOf(\"_\"));\n          year = key.substr(key.indexOf(\"_\") + 1);\n          yearCol = year;\n          if (year.includes(\"x\")) {\n            year = year.replace(/x/, \"0s\");\n          } else {\n            year = \"All Time\";\n          }\n          startMin = this.props.inputs[key].$between[0];\n          startMax = this.props.inputs[key].$between[1];\n          let gender = \"B\";\n          if (this.props.male && !this.props.female) {\n            gender = \"M\";\n          } else if (!this.props.male && this.props.female) {\n            gender = \"F\";\n          } else if (this.props.male && this.props.female) {\n            gender = \"MF\";\n          }\n          max = this.getEndpoints(key, gender);\n          this.checkSliderMinMax(\n            0,\n            max,\n            options,\n            startMin,\n            startMax,\n            outputVal\n          );\n          this.setState({\n            output: outputVal,\n            numericalOptions: options,\n            years: year,\n            yearCol: yearCol,\n            maxValue: max,\n            value: { min: startMin, max: startMax }\n          });\n        }\n      }\n    } else {\n      this.updateNumbers(\n        this.state.numericalOptions,\n        this.state.yearCol,\n        this.props.male,\n        this.props.female\n      );\n    }\n  };\n\n  updateNumericalOptions = (input, input2, evt) => {\n    evt.preventDefault();\n    this.updateNumbers(input, input2, this.props.male, this.props.female);\n  };\n\n  checkSliderMinMax = (min, max, input, startMin, startMax, outputVal) => {\n    //update both\n    this.setState({\n      numericalOptions: input,\n      minValue: min,\n      maxValue: max,\n      value: { min: startMin, max: startMax },\n      output: outputVal\n    });\n  };\n\n  updateNumbers = (input, input2, male, female) => {\n    let max = 100;\n    let prevMax = this.state.maxValue;\n    let prevMin = this.state.minValue;\n    let minPercentage = this.state.value.min / prevMax;\n    let maxPercentage = this.state.value.max / prevMax;\n    let startMin = Math.round(minPercentage * 100);\n    let startMax = Math.round(maxPercentage * 100);\n    let query = input + \"_\" + input2;\n    let gender = \"B\";\n    if (male && !female) {\n      gender = \"M\";\n    } else if (!male && female) {\n      gender = \"F\";\n    } else if (male && female) {\n      gender = \"MF\";\n    }\n    let outputVal = { [query]: { $between: [startMin, startMax] } };\n    if (input === \"Rank\" && input2 !== \"Year(s)\") {\n      //set max to the highest number in the column for that rank decade\n      max = this.getEndpoints(query, gender);\n      startMin = Math.round(max * minPercentage);\n      if (startMin === 0) {\n        startMin = 1;\n      }\n      startMax = Math.round(max * maxPercentage);\n      outputVal = { [query]: { $between: [startMin, startMax] } };\n      this.checkSliderMinMax(1, max, input, startMin, startMax, outputVal);\n      this.props.appendOutput(this.props.className, outputVal);\n    } else if (input === \"Count\" && input2 !== \"Year(s)\") {\n      //set max to the highest number in the column for that count decade\n      max = this.getEndpoints(query, gender);\n      startMin = Math.round(max * minPercentage);\n      if (prevMin === 1) {\n        startMin = 0;\n      }\n      startMax = Math.round(max * maxPercentage);\n      outputVal = { [query]: { $between: [startMin, startMax] } };\n      this.checkSliderMinMax(0, max, input, startMin, startMax, outputVal);\n      this.props.appendOutput(this.props.className, outputVal);\n    } else {\n      this.setState({ numericalOptions: input, output: outputVal });\n      this.props.appendOutput(this.props.className, outputVal);\n    }\n  };\n\n  updateYearOptions = (input1, input2, evt) => {\n    evt.preventDefault();\n    let outputVal = {};\n    if (this.state.numericalOptions !== \"Numerical Options\") {\n      let query = this.state.numericalOptions + \"_\" + input2;\n      outputVal = {\n        [query]: { $between: [this.state.value.min, this.state.value.max] }\n      };\n    }\n    this.setState({ years: input1, yearCol: input2, output: outputVal });\n    this.props.appendOutput(this.props.className, outputVal);\n    if (this.state.numericalOptions !== \"Numerical Options\") {\n      this.updateNumericalOptions(this.state.numericalOptions, input2, evt);\n    }\n  };\n\n  hideForm = () => {\n    let gender = \"B\";\n    if (this.props.male && !this.props.female) {\n      gender = \"M\";\n    } else if (!this.props.male && this.props.female) {\n      gender = \"F\";\n    } else if (this.props.male && this.props.female) {\n      gender = \"MF\";\n    }\n    if (this.props.length > 1) {\n      this.props.removeNumberRow(this.props.className);\n    } else {\n      this.setState({\n        numericalOptions: \"Count\",\n        years: \"All Time\",\n        yearCol: \"AllTime\",\n        value: { min: 0, max: myData[\"Count\"][\"AllTime\"][gender] },\n        minValue: 0,\n        maxValue: myData[\"Count\"][\"AllTime\"][gender],\n        slider: \"\",\n        output: {}\n      });\n      this.props.appendOutput(this.props.className, {\n        Count_AllTime: { $between: [0, myData[\"Count\"][\"AllTime\"][gender]] }\n      });\n      //this.props.appendOutput(this.props.className, \"\");\n      //this.props.clearBorders(r);\n    }\n  };\n\n  getEndpoints = (key, gender) => {\n    const type = key.substring(0, key.indexOf(\"_\"));\n    const year = key.substring(key.indexOf(\"_\") + 1);\n    return myData[type][year][gender];\n  };\n\n  render() {\n    let gender = \"B\";\n    if (this.props.male && !this.props.female) {\n      gender = \"M\";\n    } else if (!this.props.male && this.props.female) {\n      gender = \"F\";\n    } else if (this.props.male && this.props.female) {\n      gender = \"MF\";\n    }\n    return (\n      <div className=\"max-width\">\n        <div className=\"row justify-content-center mx-auto\">\n          <form className=\"form-inline number-form mb-0\">\n            <div className=\"dropdown ml-1\">\n              <button\n                className={`btn btn-secondary dropdown-toggle ml-0 px-1 ${\n                  this.props.dropdownClassA\n                }`}\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                {this.state.years}\n              </button>\n              <div\n                className=\"dropdown-menu\"\n                aria-labelledby=\"dropdownMenuButton\"\n              >\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1880\", \"188x\", e)}\n                >\n                  1880s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1890\", \"189x\", e)}\n                >\n                  1890s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1900\", \"190x\", e)}\n                >\n                  1900s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1910\", \"191x\", e)}\n                >\n                  1910s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1920\", \"192x\", e)}\n                >\n                  1920s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1930\", \"193x\", e)}\n                >\n                  1930s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1940\", \"194x\", e)}\n                >\n                  1940s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1950\", \"195x\", e)}\n                >\n                  1950s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1960\", \"196x\", e)}\n                >\n                  1960s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1970\", \"197x\", e)}\n                >\n                  1970s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1980\", \"198x\", e)}\n                >\n                  1980s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"1990\", \"199x\", e)}\n                >\n                  1990s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"2000\", \"200x\", e)}\n                >\n                  2000s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e => this.updateYearOptions(\"2010\", \"201x\", e)}\n                >\n                  2010s\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e =>\n                    this.updateYearOptions(\"All Time\", \"AllTime\", e)\n                  }\n                >\n                  All Time\n                </button>\n              </div>\n            </div>\n\n            <div className=\"dropdown ml-1\">\n              <button\n                className={`btn btn-secondary dropdown-toggle ml-0 px-1 ${\n                  this.props.dropdownClassB\n                }`}\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                {this.state.numericalOptions}\n              </button>\n              <div\n                className=\"dropdown-menu\"\n                aria-labelledby=\"dropdownMenuButton\"\n              >\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e =>\n                    this.updateNumericalOptions(\"Rank\", this.state.yearCol, e)\n                  }\n                >\n                  Rank\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={e =>\n                    this.updateNumericalOptions(\"Count\", this.state.yearCol, e)\n                  }\n                >\n                  Count\n                </button>\n              </div>\n            </div>\n            <InputRange\n              className=\"slider\"\n              maxValue={this.state.maxValue}\n              minValue={this.state.minValue}\n              value={this.state.value}\n              onChange={value => {\n                let outputVal = {};\n                if (this.state.numericalOptions !== \"Numerical Options\") {\n                  let query =\n                    this.state.numericalOptions + \"_\" + this.state.yearCol;\n                  outputVal = {\n                    [query]: { $between: [value.min, value.max] }\n                  };\n                }\n                this.setState({ value: value, output: outputVal });\n                this.props.appendOutput(this.props.className, outputVal);\n              }}\n            />\n          </form>\n          {this.props.length > 1 ||\n          !(\n            (this.state.years === \"All Time\" &&\n              this.state.numericalOptions === \"Count\" &&\n              this.state.value.min === 0 &&\n              this.state.value.max === myData[\"Count\"][\"AllTime\"][gender]) ||\n            (this.state.years === \"All Time\" &&\n              this.state.numericalOptions === \"Rank\" &&\n              this.state.value.min === 1 &&\n              this.state.value.max === myData[\"Rank\"][\"AllTime\"][gender])\n          ) ? (\n            <button\n              type=\"button\"\n              className=\"close text-white ml-2\"\n              onClick={this.hideForm}\n            >\n              {\" \"}\n              &times;\n            </button>\n          ) : (\n            <div />\n          )}\n          {this.props.first === this.props.nth ? (\n            <sup>\n              <button type=\"button\" className=\"info text-white pr-0 pl-1\">\n                <i\n                  className=\"fas fa-info-circle\"\n                  onClick={() => this.props.updateModal(\"number\")}\n                />\n              </button>\n            </sup>\n          ) : (\n            <div />\n          )}\n        </div>\n        <div className=\"red-text\">{this.props.errorMessage}</div>\n      </div>\n    );\n  }\n}\n\nexport default NumberForm;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport { LineChart } from \"react-chartkick\";\nimport \"chart.js\";\n\nclass Modal extends Component {\n  state = {\n    status: \"count\",\n    disclaimer: \"*** higher count is more popular ***\"\n  };\n\n  render() {\n    const showHideStyle = this.props.show ? \"block\" : \"none\";\n    const gender = this.props.gender === \"M\" ? \" - Male\" : this.props.gender === \"F\" ? \" - Female\" : \" - Both\";\n    const heading = this.props.title\n      ? this.props.title\n      : `${this.props.name}${gender}`;\n\n    const prettyMessage = this.props.messages.map((message, key) => (\n      <p key={message.cat}>\n        <span className=\"font-weight-bold\">{message.cat}</span>{\" \"}\n        {message.message}\n      </p>\n    ));\n    return (\n      <div className=\"modal\" role=\"dialog\" style={{ display: showHideStyle }}>\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title mx-auto\">{heading}</h3>\n            <button\n              type=\"button\"\n              className=\"close white p-0 m-0\"\n              onClick={this.props.handleClose}\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          {this.props.title ? (\n            <div className=\"modal-body\">\n              <div>{prettyMessage}</div>\n              {(this.props.title !== \"Contact Form\") ? (\n              <small className=\"font-weight-bold mx-auto\">\n                *** A submission will satisfy all search terms. ***\n              </small>\n              ) : (<div />) }\n            </div>\n          ) : this.state.status === \"count\" ? (\n            <div className=\"modal-body\">\n              <p> All Time Count = {this.props.count}</p>\n              <LineChart\n                colors={[\"#547980\", \"#547980\"]}\n                data={{\n                  \"1880s\": this.props.dataArr1[0],\n                  \"1890s\": this.props.dataArr1[1],\n                  \"1900s\": this.props.dataArr1[2],\n                  \"1910s\": this.props.dataArr1[3],\n                  \"1920s\": this.props.dataArr1[4],\n                  \"1930s\": this.props.dataArr1[5],\n                  \"1940s\": this.props.dataArr1[6],\n                  \"1950s\": this.props.dataArr1[7],\n                  \"1960s\": this.props.dataArr1[8],\n                  \"1970s\": this.props.dataArr1[9],\n                  \"1980s\": this.props.dataArr1[10],\n                  \"1990s\": this.props.dataArr1[11],\n                  \"2000s\": this.props.dataArr1[12],\n                  \"2010s\": this.props.dataArr1[13]\n                }}\n              />\n              <small className=\"font-weight-bold mx-auto\">{this.state.disclaimer}</small>\n            </div>\n          ) : (\n            <div className=\"modal-body\">\n              <p> All Time Rank = {this.props.rank}</p>\n              <LineChart\n                colors={[\"#547980\", \"#547980\"]}\n                data={{\n                  \"1880s\": this.props.dataArr2[0],\n                  \"1890s\": this.props.dataArr2[1],\n                  \"1900s\": this.props.dataArr2[2],\n                  \"1910s\": this.props.dataArr2[3],\n                  \"1920s\": this.props.dataArr2[4],\n                  \"1930s\": this.props.dataArr2[5],\n                  \"1940s\": this.props.dataArr2[6],\n                  \"1950s\": this.props.dataArr2[7],\n                  \"1960s\": this.props.dataArr2[8],\n                  \"1970s\": this.props.dataArr2[9],\n                  \"1980s\": this.props.dataArr2[10],\n                  \"1990s\": this.props.dataArr2[11],\n                  \"2000s\": this.props.dataArr2[12],\n                  \"2010s\": this.props.dataArr2[13]\n                }}\n              />\n              <small className=\"font-weight-bold mx-auto\">{this.state.disclaimer}</small>\n            </div>\n          )}\n          {this.props.title ? (\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={this.props.handleClose}\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          ) : (\n            <div className=\"modal-footer space-around\">\n              <h5\n                className=\"hover\"\n                onClick={() => this.setState({ status: \"count\", disclaimer: \"*** higher count is more popular ***\" })}\n              >\n                {\" \"}\n                Count{\" \"}\n              </h5>\n              <h5\n                className=\"hover\"\n                onClick={() => this.setState({ status: \"rank\", disclaimer: \"*** lower rank is more popular ***\"  })}\n              >\n                {\" \"}\n                Rank{\" \"}\n              </h5>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={this.props.handleClose}\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import axios from \"axios\";\n\nexport default {\n  findNames: function(query) {\n    console.log(query);\n    return axios.post(\"/names\", query);\n  },\n  findName: function(query) {\n    console.log(query);\n    return axios.post(\"/name\", query);\n  },\n  send: function(query) {\n    console.log(\"Sending\" + query);\n    return axios.post(\"/api/send\", query);\n  }\n};\n","import React, { Component } from \"react\";\nimport Wrapper from \"../components/Wrapper\";\nimport List from \"../components/List\";\nimport LetterForm from \"../components/LetterForm\";\nimport NumberForm from \"../components/NumberForm\";\nimport Modal from \"../components/Modal\";\nimport API from \"../utils/API\";\n\nclass App extends Component {\n  state = {\n    showModal: false,\n    male: false,\n    female: false,\n    minLength: 1,\n    maxLength: 15,\n    isLoading: false,\n    letterrows: [0],\n    numberrows: [0],\n    letterRowLength: 0,\n    numberRowLength: 0,\n    results: [],\n    letterInputs: [],\n    letterInputClasses: [],\n    letterDropdownClasses: [],\n    numberInputs: [{ Count_AllTime: { $between: [0, 5173828] } }],\n    numberDropdownClassesA: [],\n    numberDropdownClassesB: [],\n    showResults: 20,\n    moreResults: 100,\n    totalCount: -1,\n    sort: \"Most - Least Popular\",\n    sortDisplay: \"All Time\",\n    sortExtra: \"AllTime\",\n    letterErrorMessage: [],\n    numberErrorMessage: [],\n    modalTitle: \"\",\n    modalMessages: [],\n    query: \"\",\n    name: \"\",\n    gender: \"\",\n    count: 0,\n    rank: 0,\n    dataArr1: [],\n    dataArr2: []\n  };\n\n  componentDidMount() {\n    let male = false;\n    let female = false;\n    let lettersArr = [];\n    let genderArr = [];\n    let letterInputClass = [];\n    let letterDropdownClass = [];\n    let letterError = [];\n    let letterRow = [0];\n    const { savedQuery } = this.props.match.params;\n    let savedQueryEncode = encodeURI(savedQuery);\n    let savedQueryDecode = decodeURI(savedQueryEncode);\n    if (savedQuery) {\n      let fields = savedQueryDecode.split(\"&\");\n      let letters = fields[0].split(\",\");\n      for (let i = 0; i < letters.length; i++) {\n        if (letters[i]) {\n          letterRow[i] = i;\n          if (letters[i][0] !== \"!\") {\n            lettersArr[i] = { $like: letters[i] };\n          } else {\n            lettersArr[i] = { $notlike: letters[i] };\n          }\n          letterInputClass[i] = \"no-border\";\n          letterDropdownClass[i] = \"no-border\";\n          letterError[i] = \"\";\n        }\n      }\n      if (fields[1] === \"M\") {\n        male = true;\n        genderArr = [\"M\"];\n      } else if (fields[1] === \"F\") {\n        female = true;\n        genderArr = [\"F\"];\n      } else if (fields[1] === \"B\") {\n        genderArr = [\"B\"];\n      } else if (fields[1] === \"MF\") {\n        male = true;\n        female = true;\n        genderArr = [\"M\", \"F\"];\n      }\n      let numbers = [];\n      if (fields[4]) {\n        let numbersArr = fields[4];\n        numbers = JSON.parse(numbersArr);\n      }\n      let numberRow = [];\n      let numDD = [];\n      let numErr = [];\n      for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i]) {\n          numberRow[i] = i;\n          numDD[i] = \"no-border\";\n          numErr[i] = \"\";\n        }\n      }\n      let letterArrLen = lettersArr.length - 1;\n      if (!lettersArr) {\n        letterArrLen = 0;\n      }\n      let sortDD = \"Most - Least Popular\";\n      if (\n        JSON.parse(fields[6])[0][0] === \"Name\" &&\n        JSON.parse(fields[6])[0][1] === \"ASC\"\n      ) {\n        sortDD = \"A - Z\";\n      } else if (\n        JSON.parse(fields[6])[0][0] === \"Name\" &&\n        JSON.parse(fields[6])[0][1] === \"DESC\"\n      ) {\n        sortDD = \"Z - A\";\n      } else if (JSON.parse(fields[6])[0][0] === \"RAND\") {\n        sortDD = \"Random\";\n      } else if (\n        (JSON.parse(fields[6])[0][0].split(\"_\")[0] === \"Count\" &&\n          JSON.parse(fields[6])[0][1] === \"ASC\") ||\n        (JSON.parse(fields[6])[0][0].split(\"_\")[0] === \"Rank\" &&\n          JSON.parse(fields[6])[0][1] === \"DESC\")\n      ) {\n        sortDD = \"Least - Most Popular\";\n      }\n      let sortDisp = Object.getOwnPropertyNames(numbers[0])[0].split(\"_\")[1];\n      let display = \"All Time\";\n      if (sortDisp !== \"AllTime\") {\n        display = `${sortDisp.split(\"x\")[0]}0s`;\n      }\n      this.setState({\n        male: male,\n        female: female,\n        minLength: parseInt(fields[2]),\n        maxLength: parseInt(fields[3]),\n        letterrows: letterRow,\n        letterInputs: lettersArr,\n        letterRowLength: letterArrLen,\n        letterDropdownClasses: letterDropdownClass,\n        letterInputClasses: letterInputClass,\n        letterErrorMessage: letterError,\n        numberInputs: numbers,\n        numberRowLength: numbers.length,\n        numberrows: numberRow,\n        numberDropdownClassesA: numDD,\n        numberDropdownClassesB: numDD,\n        numberErrorMessage: numErr,\n        moreResults: parseInt(fields[5]),\n        sort: sortDD,\n        sortExtra: sortDisp,\n        sortDisplay: display\n      });\n      let query = {\n        letters: lettersArr,\n        gender: genderArr,\n        min: parseInt(fields[2]),\n        max: parseInt(fields[3]),\n        numbers: numbers,\n        limit: parseInt(fields[5]),\n        sort: JSON.parse(fields[6])\n      };\n      console.log(query);\n      API.findNames(query)\n        .then(res => {\n          if (res.data.count >= 20) {\n            this.setState({\n              totalCount: res.data.count,\n              results: res.data.rows,\n              isLoading: true\n            });\n          } else {\n            this.setState({\n              totalCount: res.data.count,\n              results: res.data.rows,\n              isLoading: false\n            });\n          }\n        })\n        .catch(err => {\n          console.log(\"find names error: \");\n          console.log(err);\n        });\n    }\n  }\n\n  updateModal = type => {\n    let title = \"Number Options\";\n    let messages = [\n      {\n        cat: \"Rank\",\n        message:\n          \"orders names from most popular, 1, to least popular for a selected time period.  This search returns names whose position is in the inputted range for the selected gender(s) and time period.  (lower rank is more popular)\"\n      },\n      {\n        cat: \"Count\",\n        message:\n          \"is the total number of babies given that name for a selected time period.  This search returns names whose count is in the inputted range for the selected gender(s) and time period.  (higher count is more popular)\"\n      }\n    ];\n    if (type === \"letter\") {\n      title = \"Letter Options\";\n      messages = [\n        {\n          cat: \"Contains: \",\n          message:\n            \"Returns only names that contain the letter or string inputted.\"\n        },\n        {\n          cat: \"Starts With: \",\n          message:\n            \"Returns only names that start with the letter or string inputted.\"\n        },\n        {\n          cat: \"Ends With: \",\n          message:\n            \"Returns only names that end with the letter or string inputted.\"\n        }\n      ];\n    } else if (type === \"gender\") {\n      title = \"Gender Options\";\n      messages = [\n        {\n          cat: \"Selecting Both Genders: \",\n          message: \"Returns the individual results for each gender.\"\n        },\n        {\n          cat: \"Selecting Neither Gender: \",\n          message: \"Ignores gender.\"\n        }\n      ];\n    } else if (type === \"charCount\") {\n      title = \"Name Length Options\";\n      messages = [\n        {\n          cat: \"Min Length: \",\n          message:\n            \"Returns the names with a length greater than or equal to this number.\"\n        },\n        {\n          cat: \"Max Length: \",\n          message:\n            \"Returns the names with a length less than or equal to this number.\"\n        }\n      ];\n    }\n    this.setState({\n      showModal: true,\n      modalMessages: messages,\n      modalTitle: title\n    });\n  };\n\n  handleClickLetter = () => {\n    let rows = this.state.letterrows;\n    //let index = this.state.letterRowLength + 1;\n    let index = this.state.letterrows.length;\n    rows.push(index);\n    this.setState({ letterrows: rows, letterRowLength: index });\n  };\n\n  grabLetterInput = (index, output) => {\n    let realIndex = index;\n    for (let i = 0; i < this.state.letterrows.length; i++) {\n      if (index === this.state.letterrows[i]) {\n        realIndex = i;\n      }\n    }\n    let newArray = this.state.letterInputs;\n    newArray[realIndex] = output;\n    this.setState({ letterInputs: newArray });\n  };\n\n  handleClickNumber = () => {\n    let rows = this.state.numberrows;\n    //let index = this.state.numberRowLength + 1;\n    let index = this.state.numberrows.length;\n    rows.push(index);\n    this.setState({ numberrows: rows, numberRowLength: index });\n  };\n\n  grabNumberInput = (index, output) => {\n    let realIndex = index;\n    for (let i = 0; i < this.state.numberrows.length; i++) {\n      if (index === this.state.numberrows[i]) {\n        realIndex = i;\n      }\n    }\n    let newArray = this.state.numberInputs;\n    newArray[realIndex] = output;\n    let sortDisp = Object.getOwnPropertyNames(newArray[0])[0].split(\"_\")[1];\n    let display = \"All Time\";\n    if (sortDisp !== \"AllTime\") {\n      display = `${sortDisp.split(\"x\")[0]}0s`;\n    }\n    this.setState({\n      numberInputs: newArray,\n      sortExtra: sortDisp,\n      sortDisplay: display\n    });\n  };\n\n  checkErroroneousInputs = () => {\n    let submit = true;\n    let errorArray = [];\n    let letterInput = this.state.letterInputs;\n    //let letterRow = this.state.letterrows;\n    let nullRows = [];\n    let letterInputClass = this.state.letterInputClasses;\n    let letterDropdowns = this.state.letterDropdownClasses;\n    let letterError = this.state.letterErrorMessage;\n    let dropdownA = this.state.numberDropdownClassesA;\n    let dropdownB = this.state.numberDropdownClassesB;\n    let numberError = this.state.numberErrorMessage;\n    //loop through letterInputs\n    for (let i = 0; i < this.state.letterInputs.length; i++) {\n      if (this.state.letterInputs[i]) {\n        if (\n          this.state.letterInputs[i].$like &&\n          (this.state.letterInputs[i].$like === \"%%\" ||\n            this.state.letterInputs[i].$like === \"%\" ||\n            this.state.letterInputs[i].$like === \"%Letter(s)%\" ||\n            this.state.letterInputs[i].$like === \"Letter(s)%\" ||\n            this.state.letterInputs[i].$like === \"%Letter(s)\")\n        ) {\n          //change border of letter-input-#\n          submit = false;\n          let index = this.state.letterrows[i];\n          letterDropdowns[index] = \"no-border\";\n          letterInputClass[index] = \"red-border\";\n          letterError[index] = \"*Input a value.*\";\n        } else if (this.state.letterInputs[i] === \"string\") {\n          //change border of dropdown-toggle-#\n          submit = false;\n          letterInputClass[this.state.letterrows[i]] = \"no-border\";\n          letterDropdowns[this.state.letterrows[i]] = \"red-border\";\n          letterError[this.state.letterrows[i]] = \"*Make a selection.*\";\n        } else {\n          letterInputClass[this.state.letterrows[i]] = \"no-border\";\n          letterDropdowns[this.state.letterrows[i]] = \"no-border\";\n          letterError[this.state.letterrows[i]] = \"\";\n        }\n      } else {\n        nullRows.push(i);\n      }\n      //check for 2 of the same inputs, or 2 begins withs, or 2 ends with, or starts with/ends with/contains string and does not start with/end with/contain string\n      if (i + 1 < this.state.letterInputs.length) {\n        let iString = this.state.letterInputs[i][\n          Object.getOwnPropertyNames(this.state.letterInputs[i])[0]\n        ];\n        let antiString = \"\";\n        let startString = \"\";\n        let endString = \"\";\n        let dncString = \"\";\n        if (iString.includes(\"!\")) {\n          antiString = iString.replace(/!/g, \"\");\n          if (iString[1] === \"%\" && iString.substr(-1) === \"%\") {\n            startString = antiString.replace(/%/g, \"\") + \"%\";\n            endString = \"%\" + antiString.replace(/%/g, \"\");\n          }\n        } else {\n          antiString = \"!\" + iString;\n          dncString = \"!%\" + iString.replace(/%/g, \"\") + \"%\";\n        }\n        for (let j = i + 1; j < this.state.letterInputs.length; j++) {\n          if (\n            this.state.letterInputs[i] &&\n            this.state.letterInputs[j] &&\n            this.state.letterInputs[j][\n              Object.getOwnPropertyNames(this.state.letterInputs[j])[0]\n            ][0] !== \"%Letter(s)%\" &&\n            this.state.letterInputs[j] !== \"string\"\n          ) {\n            if (\n              (Object.getOwnPropertyNames(this.state.letterInputs[i])[0] ===\n                Object.getOwnPropertyNames(this.state.letterInputs[j])[0] &&\n                this.state.letterInputs[i][\n                  Object.getOwnPropertyNames(this.state.letterInputs[i])[0]\n                ] ===\n                  this.state.letterInputs[j][\n                    Object.getOwnPropertyNames(this.state.letterInputs[j])[0]\n                  ]) ||\n              (this.state.letterInputs[i][\n                Object.getOwnPropertyNames(this.state.letterInputs[i])[0]\n              ][0] !== \"%\" &&\n                this.state.letterInputs[j][\n                  Object.getOwnPropertyNames(this.state.letterInputs[j])[0]\n                ][0] !== \"%\" &&\n                this.state.letterInputs[i][\n                  Object.getOwnPropertyNames(this.state.letterInputs[i])[0]\n                ][0] !== \"!\" &&\n                this.state.letterInputs[j][\n                  Object.getOwnPropertyNames(this.state.letterInputs[j])[0]\n                ][0] !== \"!\") ||\n              (this.state.letterInputs[i][\n                Object.getOwnPropertyNames(this.state.letterInputs[i])[0]\n              ].substr(-1) !== \"%\" &&\n                this.state.letterInputs[j][\n                  Object.getOwnPropertyNames(this.state.letterInputs[j])[0]\n                ].substr(-1) !== \"%\") ||\n              antiString ===\n                this.state.letterInputs[j][\n                  Object.getOwnPropertyNames(this.state.letterInputs[j])[0]\n                ] ||\n              (startString &&\n                this.state.letterInputs[j][\n                  Object.getOwnPropertyNames(this.state.letterInputs[j])[0]\n                ] === startString) ||\n              (endString &&\n                this.state.letterInputs[j][\n                  Object.getOwnPropertyNames(this.state.letterInputs[j])[0]\n                ] === endString) ||\n              (dncString &&\n                this.state.letterInputs[j][\n                  Object.getOwnPropertyNames(this.state.letterInputs[j])[0]\n                ] === dncString)\n            ) {\n              errorArray.push(this.state.letterrows[i]);\n              errorArray.push(this.state.letterrows[j]);\n              submit = false;\n            }\n          }\n        }\n      }\n      if (errorArray) {\n        for (let k = 0; k < errorArray.length; k++) {\n          letterInputClass[errorArray[k]] = \"red-border\";\n          letterDropdowns[errorArray[k]] = \"red-border\";\n          letterError[errorArray[k]] = \"*Incorrect Input.*\";\n        }\n      }\n    }\n    for (let i = nullRows.length - 1; i >= 0; i--) {\n      letterInput.splice(nullRows[i], 1);\n      //letterRow.splice(nullRows[i], 1);\n    }\n\n    //loop through numberInputs\n    errorArray = [];\n    for (let i = 0; i < this.state.numberInputs.length; i++) {\n      if (this.state.numberInputs[i]) {\n        if (\n          Object.getOwnPropertyNames(this.state.numberInputs[i]).length === 0\n        ) {\n          submit = false;\n          dropdownB[this.state.numberrows[i]] = \"red-border\";\n          numberError[this.state.numberrows[i]] = \"*Make a selection.*\";\n        } else if (\n          Object.getOwnPropertyNames(this.state.numberInputs[i])[0] ===\n            \"Rank_Year(s)\" ||\n          Object.getOwnPropertyNames(this.state.numberInputs[i])[0] ===\n            \"Count_Year(s)\"\n        ) {\n          submit = false;\n          dropdownA[this.state.numberrows[i]] = \"red-border\";\n          numberError[this.state.numberrows[i]] = \"*Make a selection.*\";\n        } else {\n          dropdownA[this.state.numberrows[i]] = \"no-border\";\n          dropdownB[this.state.numberrows[i]] = \"no-border\";\n          numberError[this.state.numberrows[i]] = \"\";\n        }\n      }\n      //check for 2 of the same inputs\n      if (i + 1 < this.state.numberInputs.length) {\n        for (let j = i + 1; j < this.state.numberInputs.length; j++) {\n          if (this.state.numberInputs[i] && this.state.numberInputs[j]) {\n            if (\n              Object.getOwnPropertyNames(this.state.numberInputs[i])[0] ===\n                Object.getOwnPropertyNames(this.state.numberInputs[j])[0] &&\n              Object.getOwnPropertyNames(this.state.numberInputs[i])[0]\n            ) {\n              errorArray.push(this.state.numberrows[i]);\n              errorArray.push(this.state.numberrows[j]);\n              submit = false;\n            }\n          }\n        }\n      }\n      if (errorArray) {\n        for (let k = 0; k < errorArray.length; k++) {\n          dropdownA[errorArray[k]] = \"red-border\";\n          dropdownB[errorArray[k]] = \"red-border\";\n          numberError[errorArray[k]] = \"*Make a selection.*\";\n        }\n      }\n    }\n    let newResults = this.state.results;\n    let count = this.state.totalCount;\n    if (!submit) {\n      newResults = [];\n      count = \"\";\n    }\n    this.setState({\n      letterInputClasses: letterInputClass,\n      letterDropdownClasses: letterDropdowns,\n      letterErrorMessage: letterError,\n      letterInputs: letterInput,\n      //letterrows: letterRow,\n      numberDropdownClassesA: dropdownA,\n      numberDropdownClassesB: dropdownB,\n      numberErrorMessage: numberError,\n      moreResults: 100,\n      results: newResults,\n      totalCount: count,\n      isLoading: submit\n    });\n    if (submit) {\n      for (let l = 0; l < this.state.numberInputs.length; l++) {\n        dropdownA[l] = \"no-border\";\n        dropdownB[l] = \"no-border\";\n        numberError[l] = \"\";\n      }\n      this.handleSubmit(20, 100);\n    }\n    errorArray = [];\n  };\n\n  handleSubmit = (results, moreResults) => {\n    this.setState({ showResults: results });\n    let sortOn = \"id\";\n    if (this.state.numberInputs[0]) {\n      sortOn = Object.getOwnPropertyNames(this.state.numberInputs[0])[0];\n    }\n    let sortQuery = [[sortOn, \"ASC\"]];\n    if (this.state.sort === \"A - Z\") {\n      sortQuery = [[\"Name\", \"ASC\"]];\n    } else if (this.state.sort === \"Z - A\") {\n      sortQuery = [[\"Name\", \"DESC\"]];\n    } else if (this.state.sort === \"Most - Least Popular\") {\n      if (sortOn.split(\"_\")[0] === \"Count\") {\n        sortQuery = [[sortOn, \"DESC\"]];\n        if (sortOn.split(\"_\")[1] !== this.state.sortExtra) {\n          sortQuery = [[`Count_${this.state.sortExtra}`, \"DESC\"]];\n        }\n      } else if (sortOn.split(\"_\")[0] === \"Rank\") {\n        sortQuery = [[sortOn, \"ASC\"]];\n        if (sortOn.split(\"_\")[1] !== this.state.sortExtra) {\n          sortQuery = [[`Rank_${this.state.sortExtra}`, \"ASC\"]];\n        }\n      } else {\n        sortQuery = [[\"id\", \"ASC\"]];\n      }\n    } else if (this.state.sort === \"Least - Most Popular\") {\n      if (sortOn.split(\"_\")[0] === \"Count\") {\n        sortQuery = [[sortOn, \"ASC\"]];\n        if (sortOn.split(\"_\")[1] !== this.state.sortExtra) {\n          sortQuery = [[`Count_${this.state.sortExtra}`, \"ASC\"]];\n        }\n      } else if (sortOn.split(\"_\")[0] === \"Rank\") {\n        sortQuery = [[sortOn, \"DESC\"]];\n        if (sortOn.split(\"_\")[1] !== this.state.sortExtra) {\n          sortQuery = [[`Rank_${this.state.sortExtra}`, \"DESC\"]];\n        }\n      } else {\n        sortQuery = [[\"id\", \"DESC\"]];\n      }\n    } else if (this.state.sort === \"Random\") {\n      sortQuery = [[\"RAND\", Math.floor(Math.random() * 1000)]];\n    }\n    let queryGender = \"B\";\n    let lettersArr = this.state.letterInputs;\n    let query = {\n      letters: lettersArr,\n      gender: [\"B\"],\n      min: this.state.minLength,\n      max: this.state.maxLength,\n      numbers: this.state.numberInputs,\n      limit: moreResults,\n      sort: sortQuery\n    };\n    if (this.state.female && !this.state.male) {\n      query = {\n        letters: lettersArr,\n        gender: [\"F\"],\n        min: this.state.minLength,\n        max: this.state.maxLength,\n        numbers: this.state.numberInputs,\n        limit: moreResults,\n        sort: sortQuery\n      };\n      queryGender = \"F\";\n    } else if (!this.state.female && this.state.male) {\n      query = {\n        letters: lettersArr,\n        gender: [\"M\"],\n        min: this.state.minLength,\n        max: this.state.maxLength,\n        numbers: this.state.numberInputs,\n        limit: moreResults,\n        sort: sortQuery\n      };\n      queryGender = \"M\";\n    } else if (this.state.female && this.state.male) {\n      query = {\n        letters: lettersArr,\n        gender: [\"F\", \"M\"],\n        min: this.state.minLength,\n        max: this.state.maxLength,\n        numbers: this.state.numberInputs,\n        limit: moreResults,\n        sort: sortQuery\n      };\n      queryGender = \"MF\";\n    }\n    let queryLetter = \"\";\n    for (let i = 0; i < this.state.letterInputs.length; i++) {\n      if (this.state.letterInputs[i].$like) {\n        queryLetter += this.state.letterInputs[i].$like;\n      } else {\n        queryLetter += this.state.letterInputs[i].$notlike;\n      }\n      queryLetter += \",\";\n    }\n    let queryLink =\n      queryLetter +\n      \"&\" +\n      queryGender +\n      \"&\" +\n      this.state.minLength +\n      \"&\" +\n      this.state.maxLength +\n      \"&\" +\n      JSON.stringify(this.state.numberInputs) +\n      \"&\" +\n      moreResults +\n      \"&\" +\n      JSON.stringify(sortQuery);\n    queryLink = encodeURI(queryLink);\n    this.props.history.push(\"/\" + encodeURI(queryLink));\n    API.findNames(query)\n      .then(res => {\n        if (res.data.count >= 20) {\n          this.setState({\n            totalCount: res.data.count,\n            results: res.data.rows,\n            isLoading: true,\n            seed: query.seed\n          });\n        } else {\n          this.setState({\n            totalCount: res.data.count,\n            results: res.data.rows,\n            isLoading: false,\n            seed: query.seed\n          });\n        }\n      })\n      .catch(err => {\n        console.log(\"find names error: \");\n        console.log(err);\n      });\n  };\n\n  increaseCount = () => {\n    let newCount = this.state.showResults + 20;\n    let load = this.state.isLoading;\n    if (newCount >= this.state.totalCount) {\n      load = false;\n    }\n    if (newCount >= this.state.moreResults) {\n      this.increaseResults();\n    }\n    this.setState({ showResults: newCount, isLoading: load });\n  };\n\n  increaseResults = () => {\n    let newCount = this.state.moreResults + 100;\n    this.handleSubmit(newCount - 80, newCount);\n    this.setState({ moreResults: newCount });\n  };\n\n  updateLoad = () => {\n    this.setState({ isLoading: false });\n  };\n\n  removeLetterRow = index => {\n    let realIndex = index;\n    for (let j = 0; j < this.state.letterrows.length; j++) {\n      if (this.state.letterrows[j] === index) {\n        realIndex = j;\n      }\n    }\n    // let newInputClasses = this.state.letterInputClasses;\n    // newInputClasses.splice(realIndex, 1);\n    // let newErrorMessage = this.state.letterErrorMessage;\n    // newErrorMessage.splice(realIndex, 1);\n    // let newDropdownClasses = this.state.letterDropdownClasses;\n    // newDropdownClasses.splice(realIndex, 1);\n    let newArray = this.state.letterInputs;\n    newArray.splice(realIndex, 1);\n    let newRows = this.state.letterrows;\n    //newRows.splice(realIndex, 1);\n    newRows.pop();\n    for (let i = 0; i < newRows.length; i++) {\n      newRows[i] = i;\n    }\n    this.setState({\n      //letterDropdownClasses: newDropdownClasses,\n      //letterErrorMessage: newErrorMessage,\n      //letterInputClasses: newInputClasses,\n      letterInputs: newArray,\n      letterrows: newRows\n    });\n    //this.handleSubmit(20, this.state.moreResults);\n  };\n\n  removeNumberRow = index => {\n    let realIndex = index;\n    for (let i = 0; i < this.state.numberrows.length; i++) {\n      if (this.state.numberrows[i] === index) {\n        realIndex = i;\n      }\n    }\n    let newArray = this.state.numberInputs;\n    newArray.splice(realIndex, 1);\n    let newRows = this.state.numberrows;\n    //newRows.splice(realIndex, 1);\n    newRows.pop();\n    for (let i = 0; i < newRows.length; i++) {\n      newRows[i] = i;\n    }\n    let sortDisp = Object.getOwnPropertyNames(newArray[0])[0].split(\"_\")[1];\n    let display = \"All Time\";\n    if (sortDisp !== \"AllTime\") {\n      display = `${sortDisp.split(\"x\")[0]}0s`;\n    }\n    this.setState({\n      numberInputs: newArray,\n      numberrows: newRows,\n      sortExtra: sortDisp,\n      sortDisplay: display\n    });\n    //this.handleSubmit(20, this.state.moreResults);\n  };\n\n  updateDropdownOptions = (input, evt) => {\n    evt.preventDefault();\n    this.setState({ sort: input });\n  };\n\n  updateDropdownOptionsTwo = (input, evt) => {\n    evt.preventDefault();\n    let display = \"All Time\";\n    if (input !== \"AllTime\") {\n      display = `${input.split(\"x\")[0]}0s`;\n    }\n    this.setState({ sortDisplay: display, sortExtra: input });\n  };\n\n  nameClicked = (name, gender, evt) => {\n    evt.preventDefault();\n    this.setState({ showModal: true });\n    let query = {\n      name: name,\n      gender: gender\n    };\n    API.findName(query)\n      .then(res => {\n        this.setState({\n          name: res.data[0].Name,\n          gender: res.data[0].Gender,\n          count: res.data[0].Count_AllTime,\n          rank: res.data[0].Rank_AllTime,\n          dataArr1: [\n            res.data[0].Count_188x,\n            res.data[0].Count_189x,\n            res.data[0].Count_190x,\n            res.data[0].Count_191x,\n            res.data[0].Count_192x,\n            res.data[0].Count_193x,\n            res.data[0].Count_194x,\n            res.data[0].Count_195x,\n            res.data[0].Count_196x,\n            res.data[0].Count_197x,\n            res.data[0].Count_198x,\n            res.data[0].Count_199x,\n            res.data[0].Count_200x,\n            res.data[0].Count_201x\n          ],\n          dataArr2: [\n            res.data[0].Rank_188x,\n            res.data[0].Rank_189x,\n            res.data[0].Rank_190x,\n            res.data[0].Rank_191x,\n            res.data[0].Rank_192x,\n            res.data[0].Rank_193x,\n            res.data[0].Rank_194x,\n            res.data[0].Rank_195x,\n            res.data[0].Rank_196x,\n            res.data[0].Rank_197x,\n            res.data[0].Rank_198x,\n            res.data[0].Rank_199x,\n            res.data[0].Rank_200x,\n            res.data[0].Rank_201x\n          ]\n        });\n      })\n      .catch(err => {\n        console.log(\"find name error: \");\n        console.log(err);\n      });\n  };\n\n  handleClose = () => {\n    this.setState({\n      showModal: false,\n      dataArr1: [],\n      dataArr2: [],\n      modalTitle: \"\",\n      modalMessages: [],\n      name: \"\",\n      gender: \"\",\n      count: 0,\n      rank: 0\n    });\n  };\n\n  clearLetterBorders = r => {\n    let letterDropdownClasses = [];\n    let letterInputClasses = [];\n    let letterErrorMessage = [];\n    let letterInputs = [];\n    this.setState({\n      letterDropdownClasses: letterDropdownClasses,\n      letterInputClasses: letterInputClasses,\n      letterErrorMessage: letterErrorMessage,\n      letterInputs: letterInputs\n    });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <form className=\"justify-content-center mx-0 px-0 text-center align-items-center\">\n          <div className=\"row mr-0 justify-content-center mx-auto\">\n            <div className=\"form-inline form-check form-check-inline mb-2 col-md-5\">\n              <label className=\"my-0\">\n                Male\n                <input\n                  className=\"my-0\"\n                  type=\"checkbox\"\n                  onChange={e => this.setState({ male: !this.state.male })}\n                  checked={this.state.male}\n                />\n              </label>\n              <label className=\"my-0\">\n                Female\n                <input\n                  className=\"my-0\"\n                  type=\"checkbox\"\n                  onChange={e => this.setState({ female: !this.state.female })}\n                  checked={this.state.female}\n                />\n              </label>\n              <sup className=\"mx-0\">\n                <button type=\"button\" className=\"info text-white mx-0\">\n                  <i\n                    className=\"fas fa-info-circle\"\n                    onClick={() => this.updateModal(\"gender\")}\n                  />\n                </button>\n              </sup>\n            </div>\n            <div className=\"form-inline col-md-5 mt-xs-2 mt-md-0\">\n              <div className=\"form-group ml-1\">\n                <label className=\"mb-0 mx-auto\">Min Length</label>\n                <input\n                  className=\"form-control form-control-sm mx-auto my-0 number\"\n                  type=\"number\"\n                  min=\"1\"\n                  max={this.state.maxLength}\n                  placeholder={this.state.minLength}\n                  onChange={e =>\n                    this.setState({ minLength: parseInt(e.target.value) })\n                  }\n                />\n              </div>\n              <div className=\"form-group ml-1\">\n                <label className=\"mb-0 mx-auto\">Max Length</label>\n                <input\n                  className=\"form-control form-control-sm mx-auto my-0 number\"\n                  type=\"number\"\n                  min={this.state.minLength}\n                  max=\"15\"\n                  placeholder={this.state.maxLength}\n                  onChange={e =>\n                    this.setState({ maxLength: parseInt(e.target.value) })\n                  }\n                />\n              </div>\n              <sup className=\"mx-0\">\n                <button type=\"button\" className=\"info text-white mx-0\">\n                  <i\n                    className=\"fas fa-info-circle\"\n                    onClick={() => this.updateModal(\"charCount\")}\n                  />\n                </button>\n              </sup>\n            </div>\n          </div>\n        </form>\n        <div className=\"text-center row justify-content-center mx-auto\">\n          <div className=\"col-md-4 px-0\">\n            {this.state.letterrows.map(r => (\n              <LetterForm\n                key={r}\n                nth={r}\n                className={r}\n                inputs={\n                  this.state.letterInputs[r] && this.state.letterInputs[r].$like\n                    ? this.state.letterInputs[r].$like\n                    : this.state.letterInputs[r] &&\n                      this.state.letterInputs[r].$notlike\n                    ? this.state.letterInputs[r].$notlike\n                    : \"Letter(s)\"\n                }\n                errorMessage={this.state.letterErrorMessage[r]}\n                inputClass={this.state.letterInputClasses[r]}\n                dropdownClass={this.state.letterDropdownClasses[r]}\n                appendOutput={this.grabLetterInput}\n                removeLetterRow={this.removeLetterRow}\n                updateModal={this.updateModal}\n                first={this.state.letterrows[0]}\n                length={this.state.letterrows.length}\n                clearBorders={this.clearLetterBorders}\n              />\n            ))}\n          </div>\n          <div className=\"col-md-8 px-0\">\n            {this.state.numberrows.map(r => (\n              <NumberForm\n                key={r}\n                nth={r}\n                className={r}\n                inputs={this.state.numberInputs[r]}\n                errorMessage={this.state.numberErrorMessage[r]}\n                dropdownClassA={this.state.numberDropdownClassesA[r]}\n                dropdownClassB={this.state.numberDropdownClassesB[r]}\n                appendOutput={this.grabNumberInput}\n                male={this.state.male}\n                female={this.state.female}\n                removeNumberRow={this.removeNumberRow}\n                updateModal={this.updateModal}\n                first={this.state.numberrows[0]}\n                length={this.state.numberrows.length}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"text-center white-text row justify-content-center mx-auto\">\n          <button\n            className=\"link-button col-md-4\"\n            onClick={this.handleClickLetter}\n          >\n            + More Letter Search Terms\n          </button>\n          <button\n            className=\"link-button col-md-8\"\n            onClick={this.handleClickNumber}\n          >\n            + More Number Search Terms\n          </button>\n        </div>\n        <div className=\"row justify-content-center col-12 mx-auto\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary px-1 submit\"\n            onClick={e => this.checkErroroneousInputs()}\n          >\n            Submit\n          </button>\n          {this.state.totalCount < 0 ? (\n            <h4> </h4>\n          ) : (\n            <h4 className=\"ml-2 my-auto text-white\">\n              {\" \"}\n              {this.state.totalCount}\n            </h4>\n          )}\n          {this.state.totalCount <= 1 ? (\n            <h4> </h4>\n          ) : (\n            <form className=\"form-inline\">\n              <div>\n                <button\n                  className={`btn btn-secondary dropdown-toggle px-1`}\n                  type=\"button\"\n                  id=\"dropdownMenuButton\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  {this.state.sort}\n                </button>\n                <div\n                  className=\"dropdown-menu\"\n                  aria-labelledby=\"dropdownMenuButton\"\n                >\n                  <button\n                    className=\"dropdown-item\"\n                    href=\"#\"\n                    onClick={e => this.updateDropdownOptions(\"A - Z\", e)}\n                  >\n                    A - Z\n                  </button>\n                  <button\n                    className=\"dropdown-item\"\n                    href=\"#\"\n                    onClick={e => this.updateDropdownOptions(\"Z - A\", e)}\n                  >\n                    Z - A\n                  </button>\n                  <button\n                    className=\"dropdown-item\"\n                    href=\"#\"\n                    onClick={e =>\n                      this.updateDropdownOptions(\"Most - Least Popular\", e)\n                    }\n                  >\n                    Most - Least Popular\n                  </button>\n                  <button\n                    className=\"dropdown-item\"\n                    href=\"#\"\n                    onClick={e =>\n                      this.updateDropdownOptions(\"Least - Most Popular\", e)\n                    }\n                  >\n                    Least - Most Popular\n                  </button>\n                  <button\n                    className=\"dropdown-item\"\n                    href=\"#\"\n                    onClick={e => this.updateDropdownOptions(\"Random\", e)}\n                  >\n                    Random\n                  </button>\n                </div>\n              </div>\n              {this.state.sort === \"Most - Least Popular\" ||\n              this.state.sort === \"Least - Most Popular\" ? (\n                <div>\n                  <button\n                    className={`btn btn-secondary dropdown-toggle px-1`}\n                    type=\"button\"\n                    id=\"dropdownMenuButton\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    {this.state.sortDisplay}\n                  </button>\n                  <div\n                    className=\"dropdown-menu\"\n                    aria-labelledby=\"dropdownMenuButton\"\n                  >\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"AllTime\", e)}\n                    >\n                      All Time\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"188x\", e)}\n                    >\n                      1880s\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"189x\", e)}\n                    >\n                      1890s\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"190x\", e)}\n                    >\n                      1900s\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"191x\", e)}\n                    >\n                      1910s\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"192x\", e)}\n                    >\n                      1920s\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"193x\", e)}\n                    >\n                      1930s\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"194x\", e)}\n                    >\n                      1940s\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"195x\", e)}\n                    >\n                      1950s\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"196x\", e)}\n                    >\n                      1960s\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"197x\", e)}\n                    >\n                      1970s\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"198x\", e)}\n                    >\n                      1980s\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"199x\", e)}\n                    >\n                      1990s\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"200x\", e)}\n                    >\n                      2000s\n                    </button>\n                    <button\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={e => this.updateDropdownOptionsTwo(\"201x\", e)}\n                    >\n                      2010s\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div />\n              )}\n            </form>\n          )}\n        </div>\n        <div className=\"row justify-content-center col-12 mx-auto\">\n          <List\n            results={this.state.results}\n            total={this.state.totalCount}\n            count={this.state.showResults}\n            increaseCount={this.increaseCount}\n            increaseResults={this.increaseResults}\n            updateLoad={this.updateLoad}\n            loading={this.state.isLoading}\n            nameClicked={this.nameClicked}\n          />\n        </div>\n        <Modal\n          show={this.state.showModal}\n          handleClose={this.handleClose}\n          title={this.state.modalTitle}\n          messages={this.state.modalMessages}\n          name={this.state.name}\n          gender={this.state.gender}\n          count={this.state.count}\n          rank={this.state.rank}\n          totalCount={this.state.totalCount}\n          dataArr1={this.state.dataArr1}\n          dataArr2={this.state.dataArr2}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <div className=\"row mx-auto\">\r\n          <div className=\"col-md-9 mx-auto\">\r\n            <p className=\"mx-2 p-2 yellow-text\">\r\n              Unpopular Baby originally started as a python script that parsed\r\n              the Social Security Administration Database to come up with a list\r\n              of possible names to name our son, Bryce. It has morphed into a\r\n              more user friendly web application based on friend requests. Happy\r\n              searching!\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\n\r\nclass Example extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <div className=\"mx-auto text-center\">\r\n          <img\r\n            className=\"image-size\"\r\n            src=\"/assets/images/unpopbaby.PNG\"\r\n            alt=\"example search\"\r\n          />\r\n          <p className=\"yellow-text p-2 image-size mx-auto\">\r\n            The above search searches for a male name with a length between 1\r\n            and 8 characters that begins with a B, contains a y, and was\r\n            relatively unpopular in the 2000s and 2010s.\r\n          </p>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;\r\n","import React, { Component } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\nimport Modal from \"../components/Modal\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Contact extends Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  state = {\r\n    displayErrors: false,\r\n    showModal: false,\r\n    modalMessages: []\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      showModal: false,\r\n      dataArr1: [],\r\n      dataArr2: [],\r\n      modalMessages: [],\r\n      name: \"\",\r\n      count: 0,\r\n      rank: 0\r\n    });\r\n  };\r\n\r\n  resetForm() {\r\n    document.getElementById(\"contact-form\").reset();\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (!event.target.checkValidity()) {\r\n      this.setState({ displayErrors: true });\r\n      return;\r\n    } else {\r\n      this.setState({ displayErrors: false });\r\n      const data = new FormData(event.target);\r\n\r\n      data.set(\"name\", data.get(\"name\").trim());\r\n      data.set(\"email\", data.get(\"email\").trim());\r\n      data.set(\"comments\", data.get(\"comments\").trim());\r\n\r\n      let query = {\r\n        name: data.get(\"name\"),\r\n        email: data.get(\"email\"),\r\n        comments: data.get(\"comments\")\r\n      };\r\n\r\n      API.send(query)\r\n        .then(response => {\r\n          if (response.data.msg === \"success\") {\r\n            this.setState({\r\n              modalMessages: [\r\n                {\r\n                  cat: \"\",\r\n                  message: \"Message sent!\"\r\n                }\r\n              ],\r\n              showModal: true\r\n            });\r\n            this.resetForm();\r\n          } else if (response.data.msg === \"fail\") {\r\n            this.setState({\r\n              modalMessages: [\r\n                {\r\n                  cat: \"\",\r\n                  message: \"Message failed to send.\"\r\n                }\r\n              ],\r\n              showModal: true\r\n            });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(\"contact error: \");\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const displayErrors = this.state.displayErrors;\r\n\r\n    return (\r\n      <Wrapper>\r\n        <div className=\"container\">\r\n          <div className=\"row mx-auto\">\r\n            <div className=\"col-md-9 mx-auto\">\r\n              <form\r\n                id=\"contact-form\"\r\n                onSubmit={this.handleSubmit}\r\n                noValidate\r\n                className={\r\n                  displayErrors\r\n                    ? \"form-group mx-auto displayErrors\"\r\n                    : \"form-group mx-auto\"\r\n                }\r\n              >\r\n                <label>Name: </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  className=\"form-control inputs\"\r\n                  placeholder=\"Enter name\"\r\n                  required\r\n                />\r\n                <label>Email address: </label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  className=\"form-control inputs\"\r\n                  placeholder=\"Enter email\"\r\n                  required\r\n                />\r\n                <label>Questions/Comments: </label>\r\n                <textarea\r\n                  name=\"comments\"\r\n                  type=\"text\"\r\n                  className=\"form-control inputs\"\r\n                  rows=\"5\"\r\n                  placeholder=\"Questions/Comments/Requests\"\r\n                  required\r\n                />\r\n                <div className=\"text-center\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-secondary px-1 ml-0 submit\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          show={this.state.showModal}\r\n          handleClose={this.handleClose}\r\n          title=\"Contact Form\"\r\n          messages={this.state.modalMessages}\r\n        />\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\n\nfunction NoMatch() {\n  return (\n    <div>\n\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n              </span>\n        </h1>\n\n    </div>\n  );\n}\n\nexport default NoMatch;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Main from \"./pages/Main\";\nimport About from \"./pages/About\";\nimport Example from \"./pages/Example\";\nimport Contact from \"./pages/Contact\";\nimport ErrorPage from \"./pages/ErrorPage\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Header />\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Main} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/example\" component={Example} />\n            <Route exact path=\"/contact\" component={Contact} />\n            <Route path=\"/:savedQuery\" component={Main} />\n            <Route component={ErrorPage} />\n          </Switch>\n        </BrowserRouter>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}